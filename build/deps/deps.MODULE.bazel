"""Bazel dependencies that were previously in WORKSPACE
This file is included from the root MODULE.bazel"""

bazel_dep(name = "ada-url", version = "3.3.0")
bazel_dep(name = "brotli", version = "1.1.0")

########################################################
# Override BCR versions.
# We want to avoid version skew with v8, so we use identical versions.

bazel_dep(name = "fast_float")
archive_override(
    module_name = "fast_float",
    build_file_content = """cc_library(
            name = "fast_float",
            hdrs = glob(["include/fast_float/*.h"]),
            visibility = ["//visibility:public"],
            include_prefix = "third_party/fast_float/src",
        )""",
    integrity = "sha256-aPqsgiCvLTRrx2xxprqtSg5pJkDZpZVganRSGXV/zNw=",
    remote_file_integrity = {
        "MODULE.bazel": "sha384-yDEjOPpqoh89x7hZObYuE/SX6s0RgdF/gsEeVzIkWYXd4dKnqCgzuBJIjDuNVMZF",
    },
    remote_file_urls = {
        "MODULE.bazel": ["https://raw.githubusercontent.com/bazelbuild/bazel-central-registry/refs/heads/main/modules/fast_float/8.0.2/MODULE.bazel"],
    },
    strip_prefix = "fast_float-cb1d42aaa1e14b09e1452cfdef373d051b8c02a4",
    url = "https://github.com/fastfloat/fast_float/archive/cb1d42aaa1e14b09e1452cfdef373d051b8c02a4.tar.gz",
)

bazel_dep(name = "fp16")
archive_override(
    module_name = "fp16",
    build_file_content = "exports_files(glob([\"**\"]))",
    integrity = "sha256-5AF6vyyH5TBeSwt/UaBTFBJqaZDCuv8zD7W7PUSTZNA=",
    remote_file_integrity = {
        "MODULE.bazel": "sha384-t2F1Z0CMTn/B8CDMmMxIzJHq7axSDtNTJrByWfoIhR1qxTV+O91975DZeB+fpRi7",
    },
    remote_file_urls = {
        "MODULE.bazel": ["https://raw.githubusercontent.com/bazelbuild/bazel-central-registry/refs/heads/main/modules/fp16/0.0.0-20210320-0a92994/MODULE.bazel"],
    },
    strip_prefix = "FP16-b3720617faf1a4581ed7e6787cc51722ec7751f0",
    url = "https://github.com/Maratyszcza/FP16/archive/b3720617faf1a4581ed7e6787cc51722ec7751f0.tar.gz",
)

bazel_dep(name = "highway")
archive_override(
    module_name = "highway",
    integrity = "sha256-fvP4kFP1D4jUYDZwu5qRXSUr2TMUztaR3fWRPtvE51s=",
    remote_file_integrity = {
        "MODULE.bazel": "sha384-50CeOo/jhtQcLikbg3zRITDhos49AuAFtsyx9sSX0QU4BjEnxpl4fpgDv7rX/9BL",
    },
    remote_file_urls = {
        "MODULE.bazel": ["https://raw.githubusercontent.com/bazelbuild/bazel-central-registry/refs/heads/main/modules/highway/1.3.0/MODULE.bazel"],
    },
    strip_prefix = "highway-00fe003dac355b979f36157f9407c7c46448958e",
    url = "https://github.com/google/highway/archive/00fe003dac355b979f36157f9407c7c46448958e.tar.gz",
)

bazel_dep(name = "sqlite3")

# We have some patches that aren't included in BCR:
# https://github.com/bazelbuild/bazel-central-registry/tree/main/modules/sqlite3/3.47.0/patches
archive_override(
    module_name = "sqlite3",
    build_file = "//:build/BUILD.sqlite3",
    patch_args = ["-p1"],
    patches = [
        "//:patches/sqlite/0001-row-counts-plain.patch",
        "//:patches/sqlite/0002-macOS-missing-PATH-fix.patch",
        "//:patches/sqlite/0003-sqlite-complete-early-exit.patch",
        "//:patches/sqlite/0004-invalid-wal-on-rollback-fix.patch",
    ],
    remote_file_integrity = {
        "MODULE.bazel": "sha256-TtpmqyHyks3o0WcSJO0XFyKkHfAIF98wq06+urs3oKI=",
    },
    remote_file_urls = {
        "MODULE.bazel": ["https://raw.githubusercontent.com/bazelbuild/bazel-central-registry/refs/heads/main/modules/sqlite3/3.47.0/MODULE.bazel"],
    },
    sha256 = "f59c349bedb470203586a6b6d10adb35f2afefa49f91e55a672a36a09a8fedf7",
    strip_prefix = "sqlite-src-3470000",
    url = "https://sqlite.org/2024/sqlite-src-3470000.zip",
)

bazel_dep(name = "tcmalloc", repo_name = "com_google_tcmalloc")
archive_override(
    module_name = "tcmalloc",
    integrity = "sha256-29cSZUwbEyiW8Y7FneaAzNNYLHeBmAPqBuIciHeE/u0=",
    remote_file_integrity = {
        "MODULE.bazel": "sha384-yOIZPSA2AN4Fnlo43D677Up7bTjiB+y1xFzwvLgQH6QIS3eGncWqjo6dTda+Vad2",
    },
    remote_file_urls = {
        "MODULE.bazel": ["https://raw.githubusercontent.com/bazelbuild/bazel-central-registry/refs/heads/main/modules/tcmalloc/0.0.0-20250331-43fcf6e/MODULE.bazel"],
    },
    strip_prefix = "google-tcmalloc-cf3dc2d",
    type = "tgz",
    url = "https://github.com/google/tcmalloc/tarball/cf3dc2d98bd64cb43f4f98db0acaf5028a7b81eb",
)

########################################################
# Libraries which are not on the BCR
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "nbytes",
    build_file = "//:build/BUILD.nbytes",
    sha256 = "34be48071c86add2f8d14fd4a238c47230965fd743a51b8a1dd0b2f0210f0171",
    strip_prefix = "nbytes-0.1.1",
    url = "https://github.com/nodejs/nbytes/archive/refs/tags/v0.1.1.tar.gz",
)

http_archive(
    name = "ncrypto",
    sha256 = "b438cf71b1c24036e388f191a348cdc76aca75310eabca0fef5d81d5032a5d20",
    strip_prefix = "ncrypto-1.0.1",
    type = "tgz",
    url = "https://github.com/nodejs/ncrypto/archive/refs/tags/1.0.1.tar.gz",
)

http_archive(
    name = "dragonbox",
    build_file_content = """cc_library(
            name = "dragonbox",
            hdrs = glob(["include/dragonbox/*.h"]),
            visibility = ["//visibility:public"],
            include_prefix = "third_party/dragonbox/src",
        )""",
    integrity = "sha256-cfLtl8+JzGsFwK77NJvRN/Uh7KTifw/phbGoFad4iaY=",
    strip_prefix = "dragonbox-6c7c925b571d54486b9ffae8d9d18a822801cbda",
    url = "https://github.com/jk-jeon/dragonbox/archive/6c7c925b571d54486b9ffae8d9d18a822801cbda.tar.gz",
)

http_archive(
    name = "simdutf",
    build_file = "//:build/BUILD.simdutf",
    sha256 = "b92e186ff44840edd1350f57e6c75144d912407045a3057450014cf9b2014a83",
    url = "https://github.com/simdutf/simdutf/releases/download/v7.4.0/singleheader.zip",
)
