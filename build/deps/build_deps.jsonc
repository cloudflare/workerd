{
  "$schema": "deps.schema.json",
  "repositories": [
    {
      "name": "bazel_skylib",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "bazel-skylib",
      "file_regex": "^bazel-skylib-[0-9\\.]+\\.tar\\.gz$"
    },
    {
      "name": "platforms",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "platforms",
      "file_regex": "^platforms-[0-9\\.]+\\.tar\\.gz$"
    },
    {
      "name": "rules_python",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_python",
      "file_regex": "^rules_python-.*\\.tar\\.gz$"
    },
    {
      // Previously used to allow building dawn on macOS â€“ while the build should succeed with the
      // default Linux toolchain configuration from rules_cc apple_support is still more tailored to
      // macOS. Note that this needs to be pulled in before rules_cc for this toolchain to be used.
      "name": "build_bazel_apple_support",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "apple_support",
      "file_regex": "^apple_support\\..*\\.tar\\.gz$"
    },
    // rust
    {
      "name": "rules_rust",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_rust",
      "file_regex": "^rules_rust.*\\.tar\\.gz$"
    },
    {
      "name": "cargo_bazel_linux_x64",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_rust",
      "file_regex": "^cargo-bazel-x86_64-unknown-linux-gnu$",
      "file_type": "executable"
    },
    {
      "name": "cargo_bazel_linux_arm64",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_rust",
      "file_regex": "^cargo-bazel-aarch64-unknown-linux-gnu$",
      "file_type": "executable"
    },
    {
      "name": "cargo_bazel_macos_x64",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_rust",
      "file_regex": "^cargo-bazel-x86_64-apple-darwin$",
      "file_type": "executable"
    },
    {
      "name": "cargo_bazel_macos_arm64",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_rust",
      "file_regex": "^cargo-bazel-aarch64-apple-darwin$",
      "file_type": "executable"
    },
    {
      "name": "cargo_bazel_win_x64",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_rust",
      "file_regex": "^cargo-bazel-x86_64-pc-windows-msvc.exe$",
      "file_type": "executable",
      "downloaded_file_path": "downloaded.exe"
    },
    {
      "name": "rules_cc",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_cc",
      "file_regex": "^rules_cc-"
    },
    {
      // Appears to be needed with Bazel 8
      "name": "rules_java",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_java",
      "file_regex": "^rules_java-"
    },
    {
      "name": "rules_shell",
      "type": "github_release",
      "owner": "bazelbuild",
      "repo": "rules_shell",
      "file_regex": "^rules_shell-"
    },
    {
      "name": "aspect_rules_esbuild",
      "type": "github_release",
      "owner": "aspect-build",
      "repo": "rules_esbuild",
      "file_regex": "^rules_esbuild-.*\\.tar\\.gz$"
    },
    {
      // Needed for running the latest Node.js due to aspect_rules_js using older
      // version by default
      "name": "rules_nodejs",
      "type": "github_release",
      "owner": "bazel-contrib",
      "repo": "rules_nodejs",
      "file_regex": "^rules_nodejs-.*\\.tar\\.gz$"
    },
    {
      "name": "aspect_rules_js",
      "type": "github_release",
      "owner": "aspect-build",
      "repo": "rules_js",
      "file_regex": "^rules_js-.*\\.tar\\.gz$"
    },
    {
      "name": "aspect_rules_ts",
      "type": "github_release",
      "owner": "aspect-build",
      "repo": "rules_ts",
      "file_regex": "^rules_ts-.*\\.tar\\.gz$"
    },
    //clang-format
    {
      "name": "clang-format-linux-amd64",
      "type": "github_release",
      "owner": "cloudflare",
      "repo": "workerd-tools",
      "file_regex": "llvm-.*-linux-amd64-clang-format",
      "file_type": "executable",
      "freeze_version": "llvm-18.1.8"
    },
    {
      "name": "clang-format-linux-arm64",
      "type": "github_release",
      "owner": "cloudflare",
      "repo": "workerd-tools",
      "file_regex": "llvm-.*-linux-arm64-clang-format",
      "file_type": "executable",
      "freeze_version": "llvm-18.1.8"
    },
    {
      "name": "clang-format-darwin-arm64",
      "type": "github_release",
      "owner": "cloudflare",
      "repo": "workerd-tools",
      "file_regex": "llvm-.*-darwin-arm64-clang-format",
      "file_type": "executable",
      "freeze_version": "llvm-18.1.8"
    },
    // microbenchmark
    {
      "type": "github_release",
      "name": "com_google_benchmark",
      "owner": "google",
      "repo": "benchmark"
    }
  ]
}
