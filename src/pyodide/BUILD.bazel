load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("@capnp-cpp//src/capnp:cc_capnp_library.bzl", "cc_capnp_library")
load("//:build/capnp_embed.bzl", "capnp_embed")
load("//:build/wd_js_bundle.bzl", "wd_js_bundle")

copy_file(
    name = "pyodide_packages_archive",
    src = "@pyodide_packages//:pyodide_packages_unzipped_0.2.tar",
    out = "generated/pyodide_packages_unzipped_0.1.tar",
)

capnp_embed(
    name = "pyodide_packages_archive_embed",
    src = "generated/pyodide_packages_unzipped_0.1.tar",
    deps = ["pyodide_packages_archive"],
)

copy_file(
    name = "packages_capnp_file",
    src = "pyodide_packages.capnp",
    out = "generated/pyodide_packages.capnp",
)

capnp_embed(
    name = "packages_capnp_file_embed",
    src = "generated/pyodide_packages.capnp",
    deps = ["packages_capnp_file"],
)

cc_capnp_library(
    name = "pyodide_packages_capnp",
    srcs = ["generated/pyodide_packages.capnp"],
    visibility = ["//visibility:public"],
    deps = [
        ":packages_capnp_file_embed",
        ":pyodide_packages_archive_embed",
    ],
)

copy_file(
    name = "pyodide.asm.wasm@rule",
    src = "@pyodide//:pyodide/pyodide.asm.wasm",
    out = "generated/pyodide.asm.wasm",
)

copy_file(
    name = "python_stdlib.zip@rule",
    src = "@pyodide//:pyodide/python_stdlib.zip",
    out = "generated/python_stdlib.zip",
)

PRELUDE = """
import { newWasmModule, monotonicDateNow, wasmInstantiate } from "pyodide-internal:builtin_wrappers";

function addEventListener(){}
"""

REPLACEMENTS = [
    [
        "var _createPyodideModule",
        PRELUDE + "export const _createPyodideModule",
    ],
    [
        "globalThis._createPyodideModule = _createPyodideModule;",
        "",
    ],
    [
        "new WebAssembly.Module",
        "newWasmModule",
    ],
    [
        "WebAssembly.instantiate",
        "wasmInstantiate",
    ],
    [
        "Date.now",
        "monotonicDateNow",
    ],
]

expand_template(
    name = "pyodide.asm.js@rule",
    out = "generated/pyodide.asm.js",
    substitutions = dict(REPLACEMENTS),
    template = "@pyodide//:pyodide/pyodide.asm.js",
)

wd_js_bundle(
    name = "pyodide",
    builtin_modules = [
        "python.js",
    ] + glob(["internal/patches/*.py"]),
    import_name = "pyodide",
    internal_data_modules = ["generated/python_stdlib.zip"],
    internal_modules = [
        "generated/pyodide.asm.js",
    ] + glob([
        "internal/*.js",
    ]),
    internal_wasm_modules = ["generated/pyodide.asm.wasm"],
    schema_id = "0xbcc8f57c63814005",
    deps = [
        "pyodide.asm.js@rule",
        "pyodide.asm.wasm@rule",
        "python_stdlib.zip@rule",
    ],
)
