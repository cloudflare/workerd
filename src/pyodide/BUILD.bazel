load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@capnp-cpp//src/capnp:cc_capnp_library.bzl", "cc_capnp_library")
load("//:build/capnp_embed.bzl", "capnp_embed")
load("//:build/python_metadata.bzl", "BUNDLE_VERSION_INFO", "PYTHON_LOCKFILES")
load(":helpers.bzl", "copy_and_capnp_embed", "copy_to_generated", "python_bundles")

copy_and_capnp_embed("python-entrypoint.js")

copy_to_generated(
    "pyodide_extra.capnp",
    out_name = "pyodide_extra_tmpl.capnp",
)

expand_template(
    name = "pyodide_extra_expand_template@rule",
    out = "generated/pyodide_extra.capnp",
    substitutions = {
        "%PACKAGE_LOCKS": ",".join([
            "(packageDate = \"" + package_date + "\", lock = embed \"pyodide-lock_" + package_date + ".json\")"
            for package_date in PYTHON_LOCKFILES.keys()
        ]),
    },
    template = "generated/pyodide_extra_tmpl.capnp",
)

capnp_embed(
    name = "pyodide_extra_file_embed",
    src = "generated/pyodide_extra.capnp",
    deps = ["pyodide_extra_expand_template@rule"],
)

[
    copy_and_capnp_embed("@pyodide-lock_" + package_date + ".json//file")
    for package_date in PYTHON_LOCKFILES
]

cc_capnp_library(
    name = "pyodide_extra_capnp",
    srcs = ["generated/pyodide_extra.capnp"],
    visibility = ["//visibility:public"],
    deps = [
        ":pyodide_extra_file_embed",
        ":python-entrypoint.js@capnp",
    ] + [
        ":pyodide-lock_" + package_date + ".json@capnp"
        for package_date in PYTHON_LOCKFILES.keys()
    ],
)

python_bundles()

alias(
    name = "pyodide.capnp.bin",
    actual = "pyodide.capnp.bin@rule@0.26.0a2",
    visibility = ["//visibility:public"],
)

alias(
    name = "pyodide.capnp.bin@rule",
    actual = "pyodide.capnp.bin@rule@0.26.0a2",
    visibility = ["//visibility:public"],
)

alias(
    name = "pyodide",
    actual = "pyodide@0.26.0a2",
    visibility = ["//visibility:public"],
)

write_file(
    name = "bundle_version_info",
    out = "bundle_version_info.json",
    content = [json.encode(BUNDLE_VERSION_INFO)],
)
