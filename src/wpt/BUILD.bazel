load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:eslint/package_json.bzl", eslint_bin = "bin")
load("//:build/wpt_test.bzl", "wpt_test")

wpt_test(
    name = "url",
    config = "url-test.ts",
    wpt_directory = "@wpt//:url",
)

wpt_test(
    name = "urlpattern",
    config = "urlpattern-test.ts",
    wpt_directory = "@wpt//:urlpattern",
)

wpt_test(
    name = "dom/abort",
    config = "dom/abort-test.ts",
    wpt_directory = "@wpt//:dom/abort",
)

srcs = glob(
    [
        "**/*.ts",
    ],
)

ts_project(
    name = "wpt-all@tsproject",
    srcs = srcs,
    allow_js = True,
    composite = True,
    declaration = True,
    source_map = True,
    tsconfig = "tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        "//:node_modules/@types/node",
    ],
)

eslint_bin.eslint_test(
    name = "wpt-all@eslint",
    size = "large",
    args = [
        "--config $(location {})".format("eslint.config.mjs"),
        "--parser-options project:$(location {})".format("tsconfig.json"),
        "-f stylish",
        "--report-unused-disable-directives",
    ] + ["$(location " + src + ")" for src in srcs],
    data = srcs + [
        "eslint.config.mjs",
        "tsconfig.json",
        "//:node_modules/@types/node",
        "//tools:base-eslint",
    ],
    tags = ["lint"],
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)
