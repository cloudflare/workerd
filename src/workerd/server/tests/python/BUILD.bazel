load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("//:build/python_metadata.bzl", "BUNDLE_VERSION_INFO", "PYTHON_IMPORTS_TO_TEST", "PYTHON_LOCKFILES")
load("//src/workerd/server/tests/python:import_tests.bzl", "gen_import_tests")
load("//src/workerd/server/tests/python:py_wd_test.bzl", "py_wd_test")

# pyodide_dev.capnp.bin represents a custom pyodide version "dev" that is generated
# at build time using the latest contents of the src/pyodide directory.
# This is used to run tests to ensure that they are always run against the latest build of
# the Pyodide bundle.
copy_file(
    name = "pyodide_dev.capnp.bin@rule",
    src = "//src/pyodide:pyodide.capnp.bin",
    out = "pyodide-bundle-cache/pyodide_dev.capnp.bin",
    visibility = ["//visibility:public"],
)

py_wd_test("hello")

py_wd_test("env-param")

py_wd_test("asgi")

py_wd_test("asgi-sse")

py_wd_test("random")

py_wd_test("subdirectory")

py_wd_test("sdk")

py_wd_test("seek-metadatafs")

[
    gen_import_tests(
        PYTHON_IMPORTS_TO_TEST[info["packages"]],
        python_version,
        # TODO: Micropip version mismatch for 0.27.0
        #
        # TODO: The packages below don't currently work in the latest package/python versions. Need
        # to fix them.
        #
        # TODO: pydantic_core started to fail with "no module named typing_extensions" after 0.27.5
        # was rebuilt and backport bumped.
        pkg_skip_versions = {
            "0.27.5": [
                "micropip",  # missing lockfile
                "soupsieve",  # Circular dependency with beautifulsoup4
                "starlette",  # No module named 'starlette.converters'
                # requests and dependencies have an ssl problem
                "langchain-core",
                "langchain_openai",
                "langsmith",
                "requests",
                # aiohttp has same ssl problem
                "aiohttp",
            ],
        },
    )
    for python_version, info in BUNDLE_VERSION_INFO.items()
]

py_wd_test(
    "undefined-handler",
)

py_wd_test("vendor_dir")

py_wd_test("dont-snapshot-pyodide")

py_wd_test("filter-non-py-files")

py_wd_test("durable-object")

py_wd_test("worker-entrypoint")

py_wd_test(
    "jspi",
    skip_python_flags = ["0.26.0a2"],
)

py_wd_test("js-import")

py_wd_test("importable-env")

py_wd_test("python-rpc")
