load("//:build/wd_cc_binary.bzl", "wd_cc_binary")
load("//:build/wd_cc_library.bzl", "wd_cc_library")
load("//:build/cc_ast_dump.bzl", "cc_ast_dump")
load("@bazel_skylib//rules:run_binary.bzl", "run_binary")
load("@rules_rust//rust:defs.bzl", "rust_binary")

# ========================================================================================
# C++ deps for API extraction
#
# Both `api_encoder` and `param_extractor` need access to the API surface
# of `workerd`, so this target allows them to both have the same deps

wd_cc_library(
    name = "api_encoder_lib",
    deps = [
        "//src/workerd/io",
        "//src/workerd/jsg",
        "//src/workerd/jsg:rtti",
        "@capnp-cpp//src/capnp:capnpc",
    ],
)

api_encoder_src = "api-encoder.c++"

# ========================================================================================
# API Encoder
#
# Encodes runtime API type information into a capnp schema

wd_cc_binary(
    name = "api_encoder_bin",
    srcs = [api_encoder_src],
    deps = [":api_encoder_lib"],
)

compat_dates = [
    # Oldest compatibility date, with no flags enabled
    ("2021-01-01", "oldest"),
    # https://developers.cloudflare.com/workers/platform/compatibility-dates/#formdata-parsing-supports-file
    ("2021-11-03", "2021-11-03"),
    # https://developers.cloudflare.com/workers/platform/compatibility-dates/#settersgetters-on-api-object-prototypes
    ("2022-01-31", "2022-01-31"),
    # https://developers.cloudflare.com/workers/platform/compatibility-dates/#global-navigator
    ("2022-03-21", "2022-03-21"),
    # https://developers.cloudflare.com/workers/platform/compatibility-dates/#global-navigator
    ("2022-08-04", "2022-08-04"),
    # Latest compatibility date
    ("2030-01-01", "experimental"),
]

filegroup(
    name = "api_encoder",
    srcs = [
        "//src/workerd/tools:api_encoder_" + label
        for (date, label) in compat_dates
    ],
    visibility = ["//visibility:public"],
)

[
    run_binary(
        name = "api_encoder_" + label,
        outs = [label + ".api.capnp.bin"],
        args = [
            "--output",
            "$(location " + label + ".api.capnp.bin)",
            "--compatibility-date",
            date,
        ],
        tool = "api_encoder_bin",
        visibility = ["//visibility:public"],
    )
    for (date, label) in compat_dates
]

# ========================================================================================
# Parameter Name Extractor
#
# Extracts the parameter names of functions, methods, etc. of the runtime API,
# since they're not encoded in the type information generated by `api_encoder`

cc_ast_dump(
    name = "dump_api_ast",
    src = api_encoder_src,
    out = "api.ast.json",
    deps = [":api_encoder_lib"],
)

rust_binary(
    name = "param_extractor_bin",
    srcs = ["param-extractor.rs"],
    deps = [
        "@crates_vendor//:anyhow",
        "@crates_vendor//:clang-ast",
        "@crates_vendor//:pico-args",
        "@crates_vendor//:serde",
        "@crates_vendor//:serde_json",
    ],
)

run_binary(
    name = "param_extractor",
    srcs = [
        ":dump_api_ast",
    ],
    outs = ["param-names.json"],
    args = [
        "--input",
        "$(location dump_api_ast)",
        "--output",
        "$(location param-names.json)",
    ],
    tool = "param_extractor_bin",
    visibility = ["//visibility:public"],
)
