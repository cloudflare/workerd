load("//:build/kj_test.bzl", "kj_test")
load("//:build/wd_capnp_library.bzl", "wd_capnp_library")
load("//:build/wd_cc_library.bzl", "wd_cc_library")
load("//:build/wd_test.bzl", "wd_test")

filegroup(
    name = "srcs",
    srcs = glob(
        ["**/*.c++"],
        exclude = [
            "**/*test*.c++",
            "data-url.c++",
            "encoding.c++",
            "html-rewriter.c++",
            "hyperdrive.c++",
            "pyodide/pyodide.c++",
            "pyodide/setup-emscripten.c++",
            "memory-cache.c++",
            "r2*.c++",
            "rtti.c++",
            "url.c++",
            "util.c++",
        ],
    ),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "hdrs",
    srcs = glob(
        ["**/*.h"],
        exclude = [
            "**/*test*.h",
            "data-url.h",
            "deferred-proxy.h",
            "encoding.h",
            "html-rewriter.h",
            "hyperdrive.h",
            "memory-cache.h",
            "pyodide/pyodide.h",
            "pyodide/setup-emscripten.h",
            "modules.h",
            "r2*.h",
            "rtti.h",
            "url.h",
            "util.h",
        ],
    ),
    visibility = ["//visibility:public"],
)

wd_cc_library(
    name = "r2",
    srcs = glob(["r2*.c++"]),
    hdrs = glob(["r2*.h"]),
    implementation_deps = [
        "//src/workerd/api:r2-api_capnp",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/workerd/io",
    ],
)

wd_cc_library(
    name = "memory-cache",
    srcs = ["memory-cache.c++"],
    hdrs = ["memory-cache.h"],
    implementation_deps = [
        "//src/workerd/io",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/workerd/jsg",
        "//src/workerd/util:uuid",
    ],
)

wd_cc_library(
    name = "rtti",
    srcs = ["rtti.c++"],
    hdrs = [
        "modules.h",
        "rtti.h",
        "//src/pyodide:generated/pyodide_extra.capnp.h",
        "//src/workerd/server:workerd.capnp.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":html-rewriter",
        ":hyperdrive",
        ":memory-cache",
        ":pyodide",
        ":r2",
        "//src/pyodide",
        "//src/pyodide:pyodide_extra_capnp",
        "//src/workerd/api/node",
        "//src/workerd/io",
        "//src/workerd/jsg:rtti",
        "//src/workerd/server:workerd_capnp",
    ],
)

wd_cc_library(
    name = "html-rewriter",
    srcs = ["html-rewriter.c++"],
    hdrs = ["html-rewriter.h"],
    implementation_deps = [
        "@com_cloudflare_lol_html//:lolhtml",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/workerd/io",
    ],
)

wd_cc_library(
    name = "hyperdrive",
    srcs = ["hyperdrive.c++"],
    hdrs = ["hyperdrive.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//src/workerd/io",
    ],
)

wd_cc_library(
    name = "pyodide",
    srcs = [
        "pyodide/pyodide.c++",
        "pyodide/setup-emscripten.c++",
    ],
    hdrs = [
        "pyodide/pyodide.h",
        "pyodide/setup-emscripten.h",
        "//src/pyodide:generated/pyodide_extra.capnp.h",
    ],
    implementation_deps = ["//src/workerd/util:string-buffer"],
    visibility = ["//visibility:public"],
    deps = [
        "//src/pyodide:pyodide_extra_capnp",
        "//src/workerd/io",
        "//src/workerd/jsg",
        "//src/workerd/server:workerd_capnp",
    ],
)

kj_test(
    src = "pyodide/pyodide-test.c++",
    deps = [
        ":pyodide",
    ],
)

wd_cc_library(
    name = "util",
    srcs = ["util.c++"],
    hdrs = ["util.h"],
    implementation_deps = ["@simdutf"],
    visibility = ["//visibility:public"],
    deps = [
        "//src/workerd/jsg",
        "//src/workerd/util",
        "//src/workerd/util:mimetype",
        "@capnp-cpp//src/kj",
    ],
)

wd_cc_library(
    name = "encoding",
    srcs = ["encoding.c++"],
    hdrs = ["encoding.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":util",
        "//src/workerd/io:compatibility-date_capnp",
        "//src/workerd/jsg",
        "//src/workerd/util",
        "@capnp-cpp//src/kj",
    ],
)

wd_cc_library(
    name = "data-url",
    srcs = ["data-url.c++"],
    hdrs = ["data-url.h"],
    implementation_deps = [
        ":encoding",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/workerd/jsg:url",
        "//src/workerd/util",
        "//src/workerd/util:mimetype",
        "@capnp-cpp//src/kj",
    ],
)

wd_cc_library(
    name = "deferred-proxy",
    hdrs = ["deferred-proxy.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@capnp-cpp//src/kj",
        "@capnp-cpp//src/kj:kj-async",
    ],
)

wd_capnp_library(src = "r2-api.capnp")

wd_capnp_library(src = "analytics-engine.capnp")

wd_cc_library(
    name = "url",
    srcs = ["url.c++"],
    hdrs = ["url.h"],
    implementation_deps = [":util"],
    visibility = ["//visibility:public"],
    deps = [
        "//src/workerd/io:compatibility-date_capnp",
        "//src/workerd/jsg",
        "@capnp-cpp//src/kj",
    ],
)

####################################################################################################
## Tests

[
    kj_test(
        src = f,
        deps = [
            "//src/workerd/io",
        ],
    )
    for f in [
        "actor-state-test.c++",
        "basics-test.c++",
        "crypto/aes-test.c++",
        "crypto/impl-test.c++",
        "streams/queue-test.c++",
        "streams/standard-test.c++",
        "util-test.c++",
    ]
]

kj_test(
    src = "data-url-test.c++",
    deps = [
        ":data-url",
    ],
)

kj_test(
    src = "deferred-proxy-test.c++",
    deps = [
        ":deferred-proxy",
    ],
)

kj_test(
    src = "streams/internal-test.c++",
    deps = [
        "//src/workerd/io",
        "//src/workerd/tests:test-fixture",
    ],
)

kj_test(
    src = "actor-state-iocontext-test.c++",
    deps = [
        "//src/workerd/io",
        "//src/workerd/tests:test-fixture",
    ],
)

kj_test(
    src = "api-rtti-test.c++",
    deps = [
        ":encoding",
        ":html-rewriter",
        "//src/workerd/io",
        "//src/workerd/jsg:rtti",
    ],
)

kj_test(
    src = "cf-property-test.c++",
    deps = ["//src/workerd/tests:test-fixture"],
)

wd_test(
    src = "actor-alarms-delete-test.wd-test",
    args = ["--experimental"],
    data = ["actor-alarms-delete-test.js"],
)

wd_test(
    src = "actor-alarms-test.wd-test",
    args = ["--experimental"],
    data = ["actor-alarms-test.js"],
)

wd_test(
    src = "analytics-engine-test.wd-test",
    args = ["--experimental"],
    data = ["analytics-engine-test.js"],
)

wd_test(
    src = "http-standard-test.wd-test",
    args = ["--experimental"],
    data = ["http-standard-test.js"],
)

wd_test(
    src = "http-test.wd-test",
    args = ["--experimental"],
    data = ["http-test.js"],
)

wd_test(
    src = "queue-test.wd-test",
    args = ["--experimental"],
    data = ["queue-test.js"],
)

wd_test(
    src = "r2-test.wd-test",
    args = ["--experimental"],
    data = ["r2-test.js"],
)

wd_test(
    src = "rtti-test.wd-test",
    args = ["--experimental"],
    data = ["rtti-test.js"],
)

wd_test(
    size = "large",
    src = "sql-test.wd-test",
    args = ["--experimental"],
    data = ["sql-test.js"],
)

wd_test(
    src = "streams/identitytransformstream-backpressure-test.wd-test",
    args = ["--experimental"],
    data = ["streams/identitytransformstream-backpressure-test.js"],
)

wd_test(
    src = "streams/streams-test.wd-test",
    args = ["--experimental"],
    data = ["streams/streams-test.js"],
)

wd_test(
    src = "tests/abort-internal-streams-test.wd-test",
    args = ["--experimental"],
    data = ["tests/abort-internal-streams-test.js"],
)

wd_test(
    src = "tests/abortable-fetch-test.wd-test",
    args = ["--experimental"],
    data = ["tests/abortable-fetch-test.js"],
)

wd_test(
    src = "tests/abortsignal-test.wd-test",
    args = ["--experimental"],
    data = ["tests/abortsignal-test.js"],
)

wd_test(
    src = "tests/actor-stub-test.wd-test",
    args = ["--experimental"],
    data = ["tests/actor-stub-test.js"],
)

wd_test(
    src = "tests/als-only-test.wd-test",
    args = ["--experimental"],
    data = ["tests/als-only-test.js"],
)

wd_test(
    src = "tests/als-test.wd-test",
    args = ["--experimental"],
    data = ["tests/als-test.js"],
)

wd_test(
    src = "tests/blob-test.wd-test",
    args = ["--experimental"],
    data = ["tests/blob-test.js"],
)

wd_test(
    src = "tests/blob2-test.wd-test",
    args = ["--experimental"],
    data = ["tests/blob2-test.js"],
)

wd_test(
    src = "tests/commonjs-module-test.wd-test",
    args = ["--experimental"],
    data = ["tests/commonjs-module-test.js"],
)

wd_test(
    src = "tests/crypto-extras-test.wd-test",
    args = ["--experimental"],
    data = ["tests/crypto-extras-test.js"],
)

wd_test(
    src = "tests/crypto-impl-asymmetric-test.wd-test",
    args = ["--experimental"],
    data = ["tests/crypto-impl-asymmetric-test.js"],
)

wd_test(
    src = "tests/crypto-streams-test.wd-test",
    args = ["--experimental"],
    data = ["tests/crypto-streams-test.js"],
)

wd_test(
    src = "tests/data-url-fetch-test.wd-test",
    args = ["--experimental"],
    data = ["tests/data-url-fetch-test.js"],
)

wd_test(
    src = "tests/encoding-test.wd-test",
    args = ["--experimental"],
    data = ["tests/encoding-test.js"],
)

wd_test(
    src = "tests/events-test.wd-test",
    args = ["--experimental"],
    data = ["tests/events-test.js"],
)

wd_test(
    src = "tests/eventsource-test.wd-test",
    args = ["--experimental"],
    data = ["tests/eventsource-test.js"],
)

wd_test(
    src = "tests/form-data-legacy-test.wd-test",
    args = ["--experimental"],
    data = ["tests/form-data-legacy-test.js"],
)

wd_test(
    src = "tests/form-data-test.wd-test",
    args = ["--experimental"],
    data = ["tests/form-data-test.js"],
)

wd_test(
    size = "large",
    src = "tests/global-scope-test.wd-test",
    args = ["--experimental"],
    data = ["tests/global-scope-test.js"],
)

wd_test(
    src = "tests/htmlrewriter-test.wd-test",
    args = ["--experimental"],
    data = ["tests/htmlrewriter-test.js"],
)

wd_test(
    src = "tests/js-rpc-flag.wd-test",
    args = ["--experimental"],
    data = ["tests/js-rpc-flag.js"],
)

wd_test(
    src = "tests/js-rpc-test.wd-test",
    args = ["--experimental"],
    data = ["tests/js-rpc-test.js"],
)

wd_test(
    src = "tests/memory-cache-test.wd-test",
    args = ["--experimental"],
    data = ["tests/memory-cache-test.js"],
)

wd_test(
    src = "tests/module-test.wd-test",
    args = ["--experimental"],
    data = ["tests/module-test.js"],
)

wd_test(
    src = "tests/navigator-beacon-test.wd-test",
    args = ["--experimental"],
    data = ["tests/navigator-beacon-test.js"],
)

wd_test(
    src = "tests/reporterror-test.wd-test",
    args = ["--experimental"],
    data = ["tests/reporterror-test.js"],
)

wd_test(
    src = "tests/response-json.wd-test",
    args = ["--experimental"],
    data = ["tests/response-json.js"],
)

wd_test(
    src = "tests/scheduler-test.wd-test",
    args = ["--experimental"],
    data = ["tests/scheduler-test.js"],
)

wd_test(
    src = "tests/streams-test.wd-test",
    args = ["--experimental"],
    data = ["tests/streams-test.js"],
)

wd_test(
    src = "tests/unsafe-test.wd-test",
    args = ["--experimental"],
    data = ["tests/unsafe-test.js"],
)

wd_test(
    src = "tests/url-test.wd-test",
    args = ["--experimental"],
    data = ["tests/url-test.js"],
)

wd_test(
    src = "tests/websocket-hibernation.wd-test",
    args = ["--experimental"],
    data = ["tests/websocket-hibernation.js"],
)

wd_test(
    src = "tests/js-rpc-socket-test.wd-test",
    args = [
        "--experimental",
        "--no-verbose",
    ],
    data = ["tests/js-rpc-test.js"],
)

wd_test(
    src = "http-test-ts.ts-wd-test",
    args = ["--experimental"],
    data = ["http-test-ts.ts"],
)

wd_test(
    src = "tests/new-module-registry-test.wd-test",
    args = ["--experimental"],
    data = ["tests/new-module-registry-test.js"],
)

wd_test(
    src = "tests/cross-context-promise-test.wd-test",
    args = ["--experimental"],
    data = ["tests/cross-context-promise-test.js"],
)

wd_test(
    src = "tests/error-in-error-event-test.wd-test",
    args = ["--experimental"],
    data = ["tests/error-in-error-event-test.js"],
)

wd_test(
    src = "tests/no-to-string-tag-test.wd-test",
    args = ["--experimental"],
    data = ["tests/no-to-string-tag-test.js"],
)

wd_test(
    src = "tests/fetch-test.wd-test",
    args = ["--experimental"],
    data = ["tests/fetch-test.js"],
)
