# Same as js-rpc-test.wd-test but seding RPC over a real socket.
#
# Note that in the BUILD file we explicitly disable info logging for this test because it's too
# noisy.

using Workerd = import "/workerd/workerd.capnp";

const unitTests :Workerd.Config = (
  services = [
    ( name = "js-rpc-test",
      worker = (
        modules = [
          (name = "worker", esModule = embed "js-rpc-test.js")
        ],
        compatibilityDate = "2024-01-01",
        compatibilityFlags = ["nodejs_compat","fetcher_no_get_put_delete","enable_abortsignal_rpc","experimental"],
        bindings = [
          (name = "self", service = "nonClass-loop"),
          (name = "MyService", service = "MyService-loop"),
          (name = "MyServiceProxy", service = "MyServiceProxy-loop"),
          (name = "MyActor", durableObjectNamespace = "MyActor"),
          (name = "ActorNoExtends", durableObjectNamespace = "ActorNoExtends"),
          (name = "defaultExport", service = "default-loop"),
          (name = "twelve", json = "12"),
        ],

        durableObjectNamespaces = [
          (className = "MyActor", uniqueKey = "foo"),
          (className = "ActorNoExtends", uniqueKey = "bar"),
        ],

        durableObjectStorage = (inMemory = void),
      )
    ),
    ( name = "MyService-loop",
      external = (
        address = "loopback:MyService-loop",
        http = (capnpConnectHost = "cappy")
      )
    ),
    ( name = "MyServiceProxy-loop",
      external = (
        address = "loopback:MyServiceProxy-loop",
        http = (capnpConnectHost = "cappy")
      )
    ),
    ( name = "nonClass-loop",
      external = (
        address = "loopback:nonClass-loop",
        http = (capnpConnectHost = "cappy")
      )
    ),
    ( name = "default-loop",
      external = (
        address = "loopback:default-loop",
        http = (capnpConnectHost = "cappy")
      )
    ),
  ],
  sockets = [
    ( name = "MyService-loop",
      address = "loopback:MyService-loop",
      service = (name = "js-rpc-test", entrypoint = "MyService"),
      http = (capnpConnectHost = "cappy")
    ),
    ( name = "MyServiceProxy-loop",
      address = "loopback:MyServiceProxy-loop",
      service = (name = "js-rpc-test", entrypoint = "MyServiceProxy"),
      http = (capnpConnectHost = "cappy")
    ),
    ( name = "nonClass-loop",
      address = "loopback:nonClass-loop",
      service = (name = "js-rpc-test", entrypoint = "nonClass"),
      http = (capnpConnectHost = "cappy")
    ),
    ( name = "default-loop",
      address = "loopback:default-loop",
      service = (name = "js-rpc-test"),
      http = (capnpConnectHost = "cappy")
    ),
  ],
  v8Flags = [ "--expose-gc" ],
);
