using Workerd = import "/workerd/workerd.capnp";

const unitTests :Workerd.Config = (
  services = [
    ( name = "http-test",
      worker = (
        modules = [
          ( name = "worker", esModule = embed "http-test-ts.js" )
        ],
        bindings = [
          ( name = "SERVICE", service = "http-test" ),
          ( name = "CACHE_ENABLED", json = "false" ),
          ( name = "NO_CACHE_ENABLED", json = "false" ),
        ],
        compatibilityDate = "2023-08-01",
        compatibilityFlags = ["nodejs_compat", "service_binding_extra_handlers", "cache_option_disabled"],
      )
    ),
    ( name = "http-test-cache-option-enabled",
      worker = (
        modules = [
          ( name = "worker-cache-enabled", esModule = embed "http-test-ts.js" )
        ],
        bindings = [
          ( name = "SERVICE", service = "http-test-cache-option-enabled" ),
          ( name = "CACHE_ENABLED", json = "true" ),
          ( name = "NO_CACHE_ENABLED", json = "false" ),
        ],
        compatibilityDate = "2024-11-11",
        compatibilityFlags = ["nodejs_compat", "service_binding_extra_handlers"],
      )
    ),
    ( name = "http-test-cache-no-cache",
      worker = (
        modules = [
          ( name = "worker-cache-no-cache", esModule = embed "http-test-ts.js" )
        ],
        bindings = [
          ( name = "SERVICE", service = "http-test-cache-no-cache" ),
          ( name = "CACHE_ENABLED", json = "true" ),
          ( name = "NO_CACHE_ENABLED", json = "true" ),
        ],
        compatibilityDate = "2024-11-11",
        compatibilityFlags = ["nodejs_compat", "service_binding_extra_handlers", "cache_no_cache_enabled"],
      )
    ),
  ],
);
