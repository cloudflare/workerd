{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Bazel build workerd (dbg)",
      "type": "shell",
      "command": "bazel",
      "args": ["build", "-c", "dbg", "//src/workerd/server:workerd"],
      "osx": {
        // OS X needs additional build options for symbols to work correctly
        // (https://github.com/bazelbuild/bazel/issues/6327), hence the additional
        // flags for the spawn_strategy and oso_prefix. Ideally these would
        // be in a platform specific config in .bazelrc, but this is not supported
        // (https://github.com/bazelbuild/bazel/issues/5055).
        "args": ["build", "-c", "dbg", "--spawn_strategy=local", "--features=oso_prefix_is_pwd", "//src/workerd/server:workerd"],
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel build all (dbg)",
      "type": "shell",
      "command": "bazel",
      "args": ["build", "-c", "dbg", "//..."],
      "osx": {
        // OS X needs additional build option for symbols to work correctly
        // (https://github.com/bazelbuild/bazel/issues/6327), hence the additional
        // flags for the spawn_strategy and oso_prefix. Ideally these would
        // be in a platform specific config in .bazelrc, but this is not supported
        // (https://github.com/bazelbuild/bazel/issues/5055).
        "args": ["build", "-c", "dbg","--features=oso_prefix_is_pwd", "//..."],
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel build workerd (fastbuild)",
      "type": "shell",
      "command": "bazel",
      "args": ["build", "-c", "fastbuild", "//src/workerd/server:workerd"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel build workerd (opt)",
      "type": "shell",
      "command": "bazel",
      "args": ["build", "-c", "opt", "//src/workerd/server:workerd"],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "problemMatcher": "$gcc",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel clean",
      "type": "shell",
      "command": "bazel",
      "args": ["clean"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel clean --expunge",
      "type": "shell",
      "command": "bazel",
      "args": ["clean", "--expunge"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel run all tests (dbg)",
      "type": "shell",
      "command": "bazel",
      "args": ["test", "-c", "dbg", "--cache_test_results=no", "//..."],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": "$gcc",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel run all tests (fastbuild)",
      "type": "shell",
      "command": "bazel",
      "args": ["test", "-c", "fastbuild", "--cache_test_results=no", "//..."],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": "$gcc",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Bazel run all tests (opt)",
      "type": "shell",
      "command": "bazel",
      "args": ["test", "-c", "opt", "--cache_test_results=no", "//..."],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": "$gcc",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      }
    },
    {
      "label": "Generate rust-project.json",
      "command": "bazel",
      "args": ["run", "@rules_rust//tools/rust_analyzer:gen_rust_project"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "reveal": "never",
        "panel": "dedicated"
      },
      "runOptions": {
        "runOn": "default"
      }
    },
    {
      "label": "Generate compile_commands.json",
      "command": "bazel",
      "args": ["run", "//:refresh_compile_commands"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "reveal": "never",
        "panel": "dedicated"
      },
      "runOptions": {
        "runOn": "default"
      }
    }
  ]
}
