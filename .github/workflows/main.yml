name: Tests

on:
  pull_request:
    paths-ignore:
    - 'doc/**'
  push:
    branches:
    - main

jobs:
  version: 
    outputs:
      version: ${{ steps.echo.outputs.version }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: bazelbuild/setup-bazelisk@v2
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/bazel
          key: capnp-cache
      - name: build capnp
        run: |
          bazel build --remote_timeout=5 --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.s.workers.dev @capnp-cpp//src/capnp:capnp_tool
      - id: echo
        run: |
          echo "::set-output name=version::1.$(bazel-bin/external/capnp-cpp/src/capnp/capnp_tool eval src/workerd/io/compatibility-date.capnp supportedCompatibilityDate | tr -d '-' | tr -d '"').0"
  linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: bazelbuild/setup-bazelisk@v2
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-${{ runner.arch }}-bazel-cache
          
      - name: install dependencies
        run: |
            mkdir -p ~/.cache/bazel
            export DEBIAN_FRONTEND=noninteractive
            sudo apt-get install -y build-essential git clang libc++-dev

      - name: build
        run: |
            bazel build --remote_timeout=5 --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.s.workers.dev @capnp-cpp//src/capnp:capnp_tool
      - name: Upload binary
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ runner.os }}-${{ runner.arch }}-binary
          path: bazel-bin/external/capnp-cpp/src/capnp/capnp_tool
          
  release:
    # if: ${{ github.repository_owner == 'cloudflare' }}
    name: Release
    needs: [version, linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Tag with compatibility date
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.version.outputs.version }}
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: Linux-X64-binary
          # Destination path
          path: /tmp
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/Linux-X64-binary"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ needs.version.outputs.version }}
  
          
          
      
          
          
          
