From 2b932e2395da9579963e23528b275eeb6deb8efb Mon Sep 17 00:00:00 2001
From: Alex Robinson <arobinson@cloudflare.com>
Date: Wed, 2 Mar 2022 15:58:04 -0600
Subject: [PATCH 01/22] Allow manually setting ValueDeserializer format version

For many years, V8's serialization version didn't change. In the meantime,
we accidentally stored data that was missing a version header. This patch
allows us to start using a header while still being able to correctly
interpret our existing stored data that was missing a header, using code
like:

  auto maybeHeader = deserializer.ReadHeader(isolate->GetCurrentContext());
  KJ_ASSERT(maybeHeader.IsNothing() || maybeHeader.FromJust());
  if (deserializer.GetWireFormatVersion() == 0) {
    deserializer.SetWireFormatVersion(13);
  }
  auto maybeValue = deserializer.ReadValue(isolate->GetCurrentContext());
---
 include/v8-value-serializer.h  | 7 +++++++
 src/api/api.cc                 | 4 ++++
 src/objects/value-serializer.h | 7 +++++++
 3 files changed, 18 insertions(+)

diff --git a/include/v8-value-serializer.h b/include/v8-value-serializer.h
index 0cb3e045bc4..40ad805c797 100644
--- a/include/v8-value-serializer.h
+++ b/include/v8-value-serializer.h
@@ -293,6 +293,13 @@ class V8_EXPORT ValueDeserializer {
    */
   uint32_t GetWireFormatVersion() const;
 
+  /**
+   * Sets the underlying wire format version. Should only be used if there's no
+   * header specifying the wire format version but you're confident you know
+   * what version was used to serialize the data.
+   */
+  void SetWireFormatVersion(uint32_t version);
+
   /**
    * Reads raw data in various common formats to the buffer.
    * Note that integer types are read in base-128 varint format, not with a
diff --git a/src/api/api.cc b/src/api/api.cc
index 677b11a78d1..9ad68e27f2a 100644
--- a/src/api/api.cc
+++ b/src/api/api.cc
@@ -3465,6 +3465,10 @@ uint32_t ValueDeserializer::GetWireFormatVersion() const {
   return private_->deserializer.GetWireFormatVersion();
 }
 
+void ValueDeserializer::SetWireFormatVersion(uint32_t version) {
+  private_->deserializer.SetWireFormatVersion(version);
+}
+
 MaybeLocal<Value> ValueDeserializer::ReadValue(Local<Context> context) {
   PrepareForExecutionScope api_scope{context,
                                      RCCId::kAPI_ValueDeserializer_ReadValue};
diff --git a/src/objects/value-serializer.h b/src/objects/value-serializer.h
index fbe47397ea5..395f3848f0d 100644
--- a/src/objects/value-serializer.h
+++ b/src/objects/value-serializer.h
@@ -221,6 +221,13 @@ class ValueDeserializer {
    */
   uint32_t GetWireFormatVersion() const { return version_; }
 
+  /*
+   * Sets the underlying wire format version. Should only be used if there's no
+   * header specifying the wire format version but you're confident you know
+   * what version was used to serialize the data.
+   */
+  void SetWireFormatVersion(uint32_t version) { version_ = version; }
+
   /*
    * Deserializes a V8 object from the buffer.
    */
-- 
2.43.0

