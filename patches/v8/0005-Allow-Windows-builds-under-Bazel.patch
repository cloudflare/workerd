From ed0aca8cd1673f3ff6e3f197058114d94fb51c7a Mon Sep 17 00:00:00 2001
From: Brendan Coll <bcoll@cloudflare.com>
Date: Thu, 16 Mar 2023 11:56:10 +0000
Subject: Allow Windows builds under Bazel

---
 BUILD.bazel              | 29 +++++++++++++++++------------
 bazel/config/BUILD.bazel | 37 +++++++++++++++++++++++++++++++++++++
 bazel/defs.bzl           | 30 ++++++++++++++++++++++++++++++
 3 files changed, 84 insertions(+), 12 deletions(-)

diff --git a/BUILD.bazel b/BUILD.bazel
index e6c21c523fa70388d12cedb599b1d2de2e98c55c..67442408206c3221317e32606e7f18fb349ec2e2 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -689,6 +689,7 @@ filegroup(
         "src/base/platform/mutex.h",
         "src/base/platform/platform.cc",
         "src/base/platform/platform.h",
+        "src/base/platform/platform-posix.h",  # Always included by src/execution/isolate.h
         "src/base/platform/semaphore.cc",
         "src/base/platform/semaphore.h",
         "src/base/platform/time.cc",
@@ -728,7 +729,6 @@ filegroup(
     ] + select({
         "@v8//bazel/config:is_posix": [
             "src/base/platform/platform-posix.cc",
-            "src/base/platform/platform-posix.h",
             "src/base/platform/platform-posix-time.cc",
             "src/base/platform/platform-posix-time.h",
         ],
@@ -751,6 +751,7 @@ filegroup(
         "@v8//bazel/config:is_windows": [
             "src/base/debug/stack_trace_win.cc",
             "src/base/platform/platform-win32.cc",
+            "src/base/platform/platform-win32.h",
             "src/base/win32-headers.h",
         ],
     }),
@@ -1135,6 +1136,7 @@ filegroup(
         "include/v8-wasm-trap-handler-posix.h",
         "src/api/api.cc",
         "src/api/api.h",
+        "include/v8-wasm-trap-handler-win.h",
         "src/api/api-arguments.cc",
         "src/api/api-arguments.h",
         "src/api/api-arguments-inl.h",
@@ -2537,6 +2539,11 @@ filegroup(
             "src/trap-handler/handler-inside-posix.cc",
             "src/trap-handler/handler-outside-posix.cc",
         ],
+        "@v8//bazel/config:is_windows": [
+            "src/trap-handler/handler-inside-win.cc",
+            "src/trap-handler/handler-inside-win.h",
+            "src/trap-handler/handler-outside-win.cc",
+        ],
         "//conditions:default": [],
     }) + select({
         "@v8//bazel/config:v8_arm64_simulator": [
@@ -2544,13 +2551,6 @@ filegroup(
             "src/trap-handler/trap-handler-simulator.h",
         ],
         "//conditions:default": [],
-    }) + select({
-        "@v8//bazel/config:is_windows": [
-            "src/trap-handler/handler-inside-win.cc",
-            "src/trap-handler/handler-inside-win.h",
-            "src/trap-handler/handler-outside-win.cc",
-        ],
-        "//conditions:default": [],
     }) + select({
         "@v8//bazel/config:is_windows_64bit": [
             "src/diagnostics/unwinding-info-win64.cc",
@@ -3405,6 +3405,9 @@ filegroup(
         "@v8//bazel/config:is_msvc_asm_ia32": ["src/heap/base/asm/ia32/push_registers_masm.asm"],
         "@v8//bazel/config:is_msvc_asm_x64": ["src/heap/base/asm/x64/push_registers_masm.asm"],
         "@v8//bazel/config:is_msvc_asm_arm64": ["src/heap/base/asm/arm64/push_registers_masm.S"],
+        "@v8//bazel/config:is_windows_clang_asm_ia32": ["src/heap/base/asm/ia32/push_registers_asm.cc"],
+        "@v8//bazel/config:is_windows_clang_asm_x64": ["src/heap/base/asm/x64/push_registers_asm.cc"],
+        "@v8//bazel/config:is_windows_clang_asm_arm64": ["src/heap/base/asm/arm64/push_registers_asm.cc"],
     }),
 )
 
@@ -3768,9 +3771,11 @@ filegroup(
         "src/d8/d8-js.cc",
         "src/d8/d8-platforms.cc",
         "src/d8/d8-platforms.h",
-        "src/d8/d8-posix.cc",
         "src/d8/d8-test.cc",
-    ],
+    ] + select({
+        "@v8//bazel/config:is_posix": ["src/d8/d8-posix.cc"],
+        "@v8//bazel/config:is_windows": ["src/d8/d8-windows.cc"],
+    }),
 )
 
 genrule(
@@ -4103,7 +4108,7 @@ py_test(
         ":noicu/d8",
         ":noicu/v8_build_config",
         "//testing/pybase",
-    ] + glob(["test/**"]) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
+    ] + glob(["test/**"], exclude = ["test/message/unicode-filename-*"],) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
     main = "tools/run-tests.py",
     python_version = "PY3",
     tags = [
@@ -4133,7 +4138,7 @@ py_test(
         ":icu/d8",
         ":icu/v8_build_config",
         "//testing/pybase",
-    ] + glob(["test/**"]) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
+    ] + glob(["test/**"], exclude = ["test/message/unicode-filename-*"]) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
     main = "tools/run-tests.py",
     python_version = "PY3",
     tags = [
diff --git a/bazel/config/BUILD.bazel b/bazel/config/BUILD.bazel
index 67454fa90eea460e70e286623fb1c99edd22c650..7efff1ab909dc7048a216e511c2e71c72ee8847a 100644
--- a/bazel/config/BUILD.bazel
+++ b/bazel/config/BUILD.bazel
@@ -286,6 +286,7 @@ selects.config_setting_group(
     match_all = [
         ":is_windows",
         ":is_x64",
+        ":is_compiler_default",
     ],
 )
 
@@ -294,6 +295,7 @@ selects.config_setting_group(
     match_all = [
         ":is_windows",
         ":is_ia32",
+        ":is_compiler_default",
     ],
 )
 
@@ -302,6 +304,34 @@ selects.config_setting_group(
     match_all = [
         ":is_windows",
         ":is_arm64",
+        ":is_compiler_default",
+    ],
+)
+
+selects.config_setting_group(
+    name = "is_windows_clang_asm_x64",
+    match_all = [
+        ":is_windows",
+        ":is_x64",
+        ":is_compiler_clang_cl",
+    ],
+)
+
+selects.config_setting_group(
+    name = "is_windows_clang_asm_ia32",
+    match_all = [
+        ":is_windows",
+        ":is_ia32",
+        ":is_compiler_clang_cl",
+    ],
+)
+
+selects.config_setting_group(
+    name = "is_windows_clang_asm_arm64",
+    match_all = [
+        ":is_windows",
+        ":is_arm64",
+        ":is_compiler_clang_cl",
     ],
 )
 
@@ -343,6 +373,13 @@ config_setting(
     },
 )
 
+config_setting(
+    name = "is_compiler_clang_cl",
+    flag_values = {
+        "@bazel_tools//tools/cpp:compiler": "clang-cl",
+    },
+)
+
 selects.config_setting_group(
     name = "is_clang",
     match_any = [
diff --git a/bazel/defs.bzl b/bazel/defs.bzl
index 09844919a5b572184d61530a99036c2c5116535b..b77cc065b2f5881c5dfb8da39d2019f5d62428a2 100644
--- a/bazel/defs.bzl
+++ b/bazel/defs.bzl
@@ -117,6 +117,24 @@ def _default_args():
                 "-Wno-non-virtual-dtor",
                 "-isystem .",
             ],
+            "@v8//bazel/config:is_windows": [
+                ## From BUILD.gn: `if (is_win)`
+                "/wd4245",
+                "/wd4267",
+                "/wd4324",
+                "/wd4701",
+                "/wd4702",
+                "/wd4703",
+                "/wd4709",
+                "/wd4714",
+                "/wd4715",
+                "/wd4718",
+                "/wd4723",
+                "/wd4724",
+                "/wd4800",
+                ## From BUILD.icu
+                "/wd4005",
+            ],
             "//conditions:default": [],
         }) + select({
             "@v8//bazel/config:is_clang": [
@@ -163,13 +181,23 @@ def _default_args():
             ],
             "//conditions:default": [
             ],
+        }) + select({
+            "@v8//bazel/config:is_compiler_clang_cl": [
+                "-Wno-invalid-offsetof",
+            ],
+            "//conditions:default": [],
         }),
         includes = ["include"],
         linkopts = select({
             "@v8//bazel/config:is_windows": [
+                # Increase the initial stack size. The default is 1MB, this is 2MB. This
+                # applies only to executables and shared libraries produced by V8 since
+                # ldflags are not pushed to dependants.
+                "/STACK:2097152",
                 "Winmm.lib",
                 "DbgHelp.lib",
                 "Advapi32.lib",
+                "Shell32.lib",
             ],
             "@v8//bazel/config:is_macos": ["-pthread"],
             "//conditions:default": ["-Wl,--no-as-needed -ldl -pthread"],
@@ -497,6 +525,7 @@ def v8_mksnapshot(name, args, suffix = ""):
         suffix = suffix,
         target_os = select({
             "@v8//bazel/config:is_macos": "mac",
+            "@v8//bazel/config:is_windows": "win",
             "//conditions:default": "",
         }),
     )
@@ -508,6 +537,7 @@ def v8_mksnapshot(name, args, suffix = ""):
         suffix = suffix,
         target_os = select({
             "@v8//bazel/config:is_macos": "mac",
+            "@v8//bazel/config:is_windows": "win",
             "//conditions:default": "",
         }),
     )
