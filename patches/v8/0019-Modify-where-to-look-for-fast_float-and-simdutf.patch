From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Erik Corry <erikcorry@chromium.org>
Date: Mon, 3 Mar 2025 22:30:37 +0100
Subject: Modify where to look for fast_float and simdutf.

Similar to fp16, these dependencies now needs to be downloaded by bazel.

Signed-off-by: James M Snell <jsnell@cloudflare.com>

diff --git a/BUILD.bazel b/BUILD.bazel
index a73cfb6e5394041ad502d4bb7ddc83324dc34871..22776066b7ab77a6826adaaf86f6512c263ee657 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -4367,17 +4367,19 @@ cc_library(
     ],
 )
 
-cc_library(
-  name = "simdutf",
-  srcs = ["third_party/simdutf/simdutf.cpp"],
-  hdrs = ["third_party/simdutf/simdutf.h"],
-  copts = select({
-        "@v8//bazel/config:is_clang": ["-std=c++20"],
-        "@v8//bazel/config:is_gcc": ["-std=gnu++2a"],
-        "@v8//bazel/config:is_windows": ["/std:c++20"],
-        "//conditions:default": [],
-    }),
-)
+# The simdutf library is commented out to avoid conflicts with
+# the version we use in workers
+# cc_library(
+#   name = "simdutf",
+#   srcs = ["third_party/simdutf/simdutf.cpp"],
+#   hdrs = ["third_party/simdutf/simdutf.h"],
+#   copts = select({
+#         "@v8//bazel/config:is_clang": ["-std=c++20"],
+#         "@v8//bazel/config:is_gcc": ["-std=gnu++2a"],
+#         "@v8//bazel/config:is_windows": ["/std:c++20"],
+#         "//conditions:default": [],
+#     }),
+# )
 
 v8_library(
     name = "v8_libshared",
@@ -4407,9 +4409,9 @@ v8_library(
         ":noicu/generated_torque_definitions",
     ],
     deps = [
-        "//third_party/fast_float/src:fast_float",
+        "@fast_float",
         ":lib_fp16",
-        ":simdutf",
+        "@simdutf",
         ":v8_libbase",
         "@abseil-cpp//absl/container:btree",
         "@abseil-cpp//absl/container:flat_hash_map",
diff --git a/src/builtins/builtins-typed-array.cc b/src/builtins/builtins-typed-array.cc
index b2cd7e53315beb865a058a315b68f8e8536baacd..59e460655dba1cd9d7fd7cce193ba0ddc0320e9c 100644
--- a/src/builtins/builtins-typed-array.cc
+++ b/src/builtins/builtins-typed-array.cc
@@ -12,7 +12,7 @@
 #include "src/objects/js-array-buffer-inl.h"
 #include "src/objects/objects-inl.h"
 #include "src/objects/simd.h"
-#include "third_party/simdutf/simdutf.h"
+#include "simdutf.h"
 
 namespace v8 {
 namespace internal {
diff --git a/src/objects/string.h b/src/objects/string.h
index c44a54727be467fc81b16b4b0d45c04f2ea39635..0b60b878836f31afe13c9190f2ec1323c5aeb6c1 100644
--- a/src/objects/string.h
+++ b/src/objects/string.h
@@ -21,7 +21,7 @@
 #include "src/objects/tagged.h"
 #include "src/sandbox/external-pointer.h"
 #include "src/strings/unicode-decoder.h"
-#include "third_party/simdutf/simdutf.h"
+#include "simdutf.h"
 
 // Has to be the last include (doesn't have include guards):
 #include "src/objects/object-macros.h"
