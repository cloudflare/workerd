From 6dfefbe388136c0d648e7cee0c2080c7eaac7861 Mon Sep 17 00:00:00 2001
From: Brendan Coll <bcoll@cloudflare.com>
Date: Thu, 16 Mar 2023 11:56:10 +0000
Subject: Allow Windows builds under Bazel


diff --git a/BUILD.bazel b/BUILD.bazel
index 1f269f9c149e56a7098697fc2346b5998b0c6e01..89bc2f54fc5e42a2cf6d6fa41742c2dfe2c9ab48 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -817,6 +817,7 @@ filegroup(
         "src/base/platform/mutex.h",
         "src/base/platform/platform.cc",
         "src/base/platform/platform.h",
+        "src/base/platform/platform-posix.h",  # Always included by src/execution/isolate.h
         "src/base/platform/semaphore.cc",
         "src/base/platform/semaphore.h",
         "src/base/platform/time.cc",
@@ -860,7 +861,6 @@ filegroup(
     ] + select({
         "@v8//bazel/config:is_posix": [
             "src/base/platform/platform-posix.cc",
-            "src/base/platform/platform-posix.h",
             "src/base/platform/platform-posix-time.cc",
             "src/base/platform/platform-posix-time.h",
         ],
@@ -883,6 +883,7 @@ filegroup(
         "@v8//bazel/config:is_windows": [
             "src/base/debug/stack_trace_win.cc",
             "src/base/platform/platform-win32.cc",
+            "src/base/platform/platform-win32.h",
             "src/base/win32-headers.h",
         ],
     }),
@@ -1265,6 +1266,7 @@ filegroup(
         "include/v8-wasm-trap-handler-posix.h",
         "src/api/api.cc",
         "src/api/api.h",
+        "include/v8-wasm-trap-handler-win.h",
         "src/api/api-arguments.cc",
         "src/api/api-arguments.h",
         "src/api/api-arguments-inl.h",
@@ -2739,6 +2741,11 @@ filegroup(
             "src/trap-handler/handler-inside-posix.cc",
             "src/trap-handler/handler-outside-posix.cc",
         ],
+        "@v8//bazel/config:is_windows": [
+            "src/trap-handler/handler-inside-win.cc",
+            "src/trap-handler/handler-inside-win.h",
+            "src/trap-handler/handler-outside-win.cc",
+        ],
         "//conditions:default": [],
     }) + select({
         "@v8//bazel/config:v8_arm64_simulator": [
@@ -2746,13 +2753,6 @@ filegroup(
             "src/trap-handler/trap-handler-simulator.h",
         ],
         "//conditions:default": [],
-    }) + select({
-        "@v8//bazel/config:is_windows": [
-            "src/trap-handler/handler-inside-win.cc",
-            "src/trap-handler/handler-inside-win.h",
-            "src/trap-handler/handler-outside-win.cc",
-        ],
-        "//conditions:default": [],
     }) + select({
         "@v8//bazel/config:is_windows_64bit": [
             "src/diagnostics/unwinding-info-win64.cc",
@@ -3805,6 +3805,9 @@ filegroup(
         "@v8//bazel/config:is_msvc_asm_ia32": ["src/heap/base/asm/ia32/push_registers_masm.asm"],
         "@v8//bazel/config:is_msvc_asm_x64": ["src/heap/base/asm/x64/push_registers_masm.asm"],
         "@v8//bazel/config:is_msvc_asm_arm64": ["src/heap/base/asm/arm64/push_registers_masm.S"],
+        "@v8//bazel/config:is_windows_clang_asm_ia32": ["src/heap/base/asm/ia32/push_registers_asm.cc"],
+        "@v8//bazel/config:is_windows_clang_asm_x64": ["src/heap/base/asm/x64/push_registers_asm.cc"],
+        "@v8//bazel/config:is_windows_clang_asm_arm64": ["src/heap/base/asm/arm64/push_registers_asm.cc"],
     }),
 )
 
@@ -4201,9 +4204,11 @@ filegroup(
         "src/d8/d8-js.cc",
         "src/d8/d8-platforms.cc",
         "src/d8/d8-platforms.h",
-        "src/d8/d8-posix.cc",
         "src/d8/d8-test.cc",
-    ],
+    ] + select({
+        "@v8//bazel/config:is_posix": ["src/d8/d8-posix.cc"],
+        "@v8//bazel/config:is_windows": ["src/d8/d8-windows.cc"],
+    }),
 )
 
 genrule(
@@ -4554,7 +4559,7 @@ py_test(
         ":noicu/d8",
         ":noicu/v8_build_config",
         "//testing/pybase",
-    ] + glob(["test/**"]) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
+    ] + glob(["test/**"], exclude = ["test/message/unicode-filename-*"],) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
     main = "tools/run-tests.py",
     python_version = "PY3",
     tags = [
@@ -4593,7 +4598,7 @@ py_test(
         ":icu/d8",
         ":icu/v8_build_config",
         "//testing/pybase",
-    ] + glob(["test/**"]) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
+    ] + glob(["test/**"], exclude = ["test/message/unicode-filename-*"]) + glob(["tools/**/*.js"]) + glob(["tools/**/*.mjs"]),
     main = "tools/run-tests.py",
     python_version = "PY3",
     tags = [
diff --git a/bazel/config/BUILD.bazel b/bazel/config/BUILD.bazel
index c81f278203126913c3bad74d31348706678ccf06..96e0f9cdb61d0d8f6597d337c2dd965ba67de12c 100644
--- a/bazel/config/BUILD.bazel
+++ b/bazel/config/BUILD.bazel
@@ -270,6 +270,7 @@ selects.config_setting_group(
     match_all = [
         ":is_windows",
         ":is_x64",
+        ":is_compiler_default",
     ],
 )
 
@@ -278,6 +279,7 @@ selects.config_setting_group(
     match_all = [
         ":is_windows",
         ":is_ia32",
+        ":is_compiler_default",
     ],
 )
 
@@ -286,6 +288,34 @@ selects.config_setting_group(
     match_all = [
         ":is_windows",
         ":is_arm64",
+        ":is_compiler_default",
+    ],
+)
+
+selects.config_setting_group(
+    name = "is_windows_clang_asm_x64",
+    match_all = [
+        ":is_windows",
+        ":is_x64",
+        ":is_compiler_clang_cl",
+    ],
+)
+
+selects.config_setting_group(
+    name = "is_windows_clang_asm_ia32",
+    match_all = [
+        ":is_windows",
+        ":is_ia32",
+        ":is_compiler_clang_cl",
+    ],
+)
+
+selects.config_setting_group(
+    name = "is_windows_clang_asm_arm64",
+    match_all = [
+        ":is_windows",
+        ":is_arm64",
+        ":is_compiler_clang_cl",
     ],
 )
 
@@ -319,6 +349,13 @@ config_setting(
     },
 )
 
+config_setting(
+    name = "is_compiler_clang_cl",
+    flag_values = {
+        "@bazel_tools//tools/cpp:compiler": "clang-cl",
+    },
+)
+
 selects.config_setting_group(
     name = "is_clang",
     match_any = [
diff --git a/bazel/defs.bzl b/bazel/defs.bzl
index ba1716d9ad466a1a7a0a8976631c6a82cad9b894..cda9c55baefe428bd85b8d98dbf475d07e9c4307 100644
--- a/bazel/defs.bzl
+++ b/bazel/defs.bzl
@@ -119,6 +119,24 @@ def _default_args():
                 "-Wno-non-virtual-dtor",
                 "-isystem .",
             ],
+            "@v8//bazel/config:is_windows": [
+                ## From BUILD.gn: `if (is_win)`
+                "/wd4245",
+                "/wd4267",
+                "/wd4324",
+                "/wd4701",
+                "/wd4702",
+                "/wd4703",
+                "/wd4709",
+                "/wd4714",
+                "/wd4715",
+                "/wd4718",
+                "/wd4723",
+                "/wd4724",
+                "/wd4800",
+                ## From BUILD.icu
+                "/wd4005",
+            ],
             "//conditions:default": [],
         }) + select({
             "@v8//bazel/config:is_clang": [
@@ -167,13 +185,23 @@ def _default_args():
             ],
             "//conditions:default": [
             ],
+        }) + select({
+            "@v8//bazel/config:is_compiler_clang_cl": [
+                "-Wno-invalid-offsetof",
+            ],
+            "//conditions:default": [],
         }),
         includes = ["include"],
         linkopts = select({
             "@v8//bazel/config:is_windows": [
+                # Increase the initial stack size. The default is 1MB, this is 2MB. This
+                # applies only to executables and shared libraries produced by V8 since
+                # ldflags are not pushed to dependants.
+                "/STACK:2097152",
                 "Winmm.lib",
                 "DbgHelp.lib",
                 "Advapi32.lib",
+                "Shell32.lib",
             ],
             "@v8//bazel/config:is_macos": ["-pthread"],
             "//conditions:default": ["-Wl,--no-as-needed -ldl -pthread"],
@@ -495,6 +523,7 @@ def v8_mksnapshot(name, args, suffix = ""):
         suffix = suffix,
         target_os = select({
             "@v8//bazel/config:is_macos": "mac",
+            "@v8//bazel/config:is_windows": "win",
             "//conditions:default": "",
         }),
     )
@@ -506,6 +535,7 @@ def v8_mksnapshot(name, args, suffix = ""):
         suffix = suffix,
         target_os = select({
             "@v8//bazel/config:is_macos": "mac",
+            "@v8//bazel/config:is_windows": "win",
             "//conditions:default": "",
         }),
     )
