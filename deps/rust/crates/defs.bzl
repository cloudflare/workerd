###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//deps/rust:crates_vendor
###############################################################################
"""
# `crates_repository` API

- [aliases](#aliases)
- [crate_deps](#crate_deps)
- [all_crate_deps](#all_crate_deps)
- [crate_repositories](#crate_repositories)

"""

load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

###############################################################################
# MACROS API
###############################################################################

# An identifier that represent common dependencies (unconditional).
_COMMON_CONDITION = ""

def _flatten_dependency_maps(all_dependency_maps):
    """Flatten a list of dependency maps into one dictionary.

    Dependency maps have the following structure:

    ```python
    DEPENDENCIES_MAP = {
        # The first key in the map is a Bazel package
        # name of the workspace this file is defined in.
        "workspace_member_package": {

            # Not all dependencies are supported for all platforms.
            # the condition key is the condition required to be true
            # on the host platform.
            "condition": {

                # An alias to a crate target.     # The label of the crate target the
                # Aliases are only crate names.   # package name refers to.
                "package_name":                   "@full//:label",
            }
        }
    }
    ```

    Args:
        all_dependency_maps (list): A list of dicts as described above

    Returns:
        dict: A dictionary as described above
    """
    dependencies = {}

    for workspace_deps_map in all_dependency_maps:
        for pkg_name, conditional_deps_map in workspace_deps_map.items():
            if pkg_name not in dependencies:
                non_frozen_map = dict()
                for key, values in conditional_deps_map.items():
                    non_frozen_map.update({key: dict(values.items())})
                dependencies.setdefault(pkg_name, non_frozen_map)
                continue

            for condition, deps_map in conditional_deps_map.items():
                # If the condition has not been recorded, do so and continue
                if condition not in dependencies[pkg_name]:
                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))
                    continue

                # Alert on any miss-matched dependencies
                inconsistent_entries = []
                for crate_name, crate_label in deps_map.items():
                    existing = dependencies[pkg_name][condition].get(crate_name)
                    if existing and existing != crate_label:
                        inconsistent_entries.append((crate_name, existing, crate_label))
                    dependencies[pkg_name][condition].update({crate_name: crate_label})

    return dependencies

def crate_deps(deps, package_name = None):
    """Finds the fully qualified label of the requested crates for the package where this macro is called.

    Args:
        deps (list): The desired list of crate targets.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if not deps:
        return []

    if package_name == None:
        package_name = native.package_name()

    # Join both sets of dependencies
    dependencies = _flatten_dependency_maps([
        _NORMAL_DEPENDENCIES,
        _NORMAL_DEV_DEPENDENCIES,
        _PROC_MACRO_DEPENDENCIES,
        _PROC_MACRO_DEV_DEPENDENCIES,
        _BUILD_DEPENDENCIES,
        _BUILD_PROC_MACRO_DEPENDENCIES,
    ]).pop(package_name, {})

    # Combine all conditional packages so we can easily index over a flat list
    # TODO: Perhaps this should actually return select statements and maintain
    # the conditionals of the dependencies
    flat_deps = {}
    for deps_set in dependencies.values():
        for crate_name, crate_label in deps_set.items():
            flat_deps.update({crate_name: crate_label})

    missing_crates = []
    crate_targets = []
    for crate_target in deps:
        if crate_target not in flat_deps:
            missing_crates.append(crate_target)
        else:
            crate_targets.append(flat_deps[crate_target])

    if missing_crates:
        fail("Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`".format(
            missing_crates,
            package_name,
            dependencies,
        ))

    return crate_targets

def all_crate_deps(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Finds the fully qualified label of all requested direct crate dependencies \
    for the package where this macro is called.

    If no parameters are set, all normal dependencies are returned. Setting any one flag will
    otherwise impact the contents of the returned list.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_dependency_maps = []
    if normal:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)
    if normal_dev:
        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)
    if proc_macro:
        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)
    if proc_macro_dev:
        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)
    if build:
        all_dependency_maps.append(_BUILD_DEPENDENCIES)
    if build_proc_macro:
        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)

    # Default to always using normal dependencies
    if not all_dependency_maps:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)

    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)

    if not dependencies:
        if dependencies == None:
            fail("Tried to get all_crate_deps for package " + package_name + " but that package had no Cargo.toml file")
        else:
            return []

    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())
    for condition, deps in dependencies.items():
        crate_deps += selects.with_or({
            tuple(_CONDITIONS[condition]): deps.values(),
            "//conditions:default": [],
        })

    return crate_deps

def aliases(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Produces a map of Crate alias names to their original label

    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.
    Setting any one flag will otherwise determine the contents of the returned dict.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        dict: The aliases of all associated packages
    """
    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_aliases_maps = []
    if normal:
        all_aliases_maps.append(_NORMAL_ALIASES)
    if normal_dev:
        all_aliases_maps.append(_NORMAL_DEV_ALIASES)
    if proc_macro:
        all_aliases_maps.append(_PROC_MACRO_ALIASES)
    if proc_macro_dev:
        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)
    if build:
        all_aliases_maps.append(_BUILD_ALIASES)
    if build_proc_macro:
        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)

    # Default to always using normal aliases
    if not all_aliases_maps:
        all_aliases_maps.append(_NORMAL_ALIASES)
        all_aliases_maps.append(_PROC_MACRO_ALIASES)

    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)

    if not aliases:
        return dict()

    common_items = aliases.pop(_COMMON_CONDITION, {}).items()

    # If there are only common items in the dictionary, immediately return them
    if not len(aliases.keys()) == 1:
        return dict(common_items)

    # Build a single select statement where each conditional has accounted for the
    # common set of aliases.
    crate_aliases = {"//conditions:default": dict(common_items)}
    for condition, deps in aliases.items():
        condition_triples = _CONDITIONS[condition]
        for triple in condition_triples:
            if triple in crate_aliases:
                crate_aliases[triple].update(deps)
            else:
                crate_aliases.update({triple: dict(deps.items() + common_items)})

    return select(crate_aliases)

###############################################################################
# WORKSPACE MEMBER DEPS AND ALIASES
###############################################################################

_NORMAL_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "anyhow": Label("@crates_vendor__anyhow-1.0.93//:anyhow"),
            "capnp": Label("@crates_vendor__capnp-0.20.3//:capnp"),
            "capnpc": Label("@crates_vendor__capnpc-0.20.1//:capnpc"),
            "clang-ast": Label("@crates_vendor__clang-ast-0.1.26//:clang_ast"),
            "clap": Label("@crates_vendor__clap-4.5.21//:clap"),
            "codespan-reporting": Label("@crates_vendor__codespan-reporting-0.11.1//:codespan_reporting"),
            "cxx": Label("@crates_vendor__cxx-1.0.130//:cxx"),
            "flate2": Label("@crates_vendor__flate2-1.0.35//:flate2"),
            "lolhtml": Label("@crates_vendor__lolhtml-1.1.2//:lolhtml"),
            "nix": Label("@crates_vendor__nix-0.29.0//:nix"),
            "pico-args": Label("@crates_vendor__pico-args-0.5.0//:pico_args"),
            "proc-macro2": Label("@crates_vendor__proc-macro2-1.0.89//:proc_macro2"),
            "quote": Label("@crates_vendor__quote-1.0.37//:quote"),
            "serde": Label("@crates_vendor__serde-1.0.215//:serde"),
            "serde_json": Label("@crates_vendor__serde_json-1.0.132//:serde_json"),
            "syn": Label("@crates_vendor__syn-2.0.87//:syn"),
            "tokio": Label("@crates_vendor__tokio-1.41.1//:tokio"),
            "tracing": Label("@crates_vendor__tracing-0.1.40//:tracing"),
        },
    },
}

_NORMAL_ALIASES = {
    "": {
        _COMMON_CONDITION: {
        },
    },
}

_NORMAL_DEV_DEPENDENCIES = {
    "": {
    },
}

_NORMAL_DEV_ALIASES = {
    "": {
    },
}

_PROC_MACRO_DEPENDENCIES = {
    "": {
    },
}

_PROC_MACRO_ALIASES = {
    "": {
    },
}

_PROC_MACRO_DEV_DEPENDENCIES = {
    "": {
    },
}

_PROC_MACRO_DEV_ALIASES = {
    "": {
    },
}

_BUILD_DEPENDENCIES = {
    "": {
    },
}

_BUILD_ALIASES = {
    "": {
    },
}

_BUILD_PROC_MACRO_DEPENDENCIES = {
    "": {
    },
}

_BUILD_PROC_MACRO_ALIASES = {
    "": {
    },
}

_CONDITIONS = {
    "aarch64-apple-darwin": ["@rules_rust//rust/platform:aarch64-apple-darwin"],
    "aarch64-pc-windows-gnullvm": [],
    "aarch64-unknown-linux-gnu": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "cfg(all(any(target_arch = \"x86_64\", target_arch = \"arm64ec\"), target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(all(target_arch = \"aarch64\", target_env = \"msvc\", not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86\", target_env = \"msvc\", not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(target_os = \"emscripten\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(target_os = \"emscripten\")": [],
    "cfg(target_os = \"hermit\")": [],
    "cfg(target_os = \"wasi\")": [],
    "cfg(tokio_taskdump)": [],
    "cfg(unix)": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(windows)": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "i686-pc-windows-gnullvm": [],
    "x86_64-apple-darwin": ["@rules_rust//rust/platform:x86_64-apple-darwin"],
    "x86_64-pc-windows-gnullvm": [],
    "x86_64-pc-windows-msvc": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "x86_64-unknown-linux-gnu": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
}

###############################################################################

def crate_repositories():
    """A macro for defining repositories for all generated crates.

    Returns:
      A list of repos visible to the module through the module extension.
    """
    maybe(
        http_archive,
        name = "crates_vendor__addr2line-0.24.2",
        sha256 = "dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/addr2line/0.24.2/download"],
        strip_prefix = "addr2line-0.24.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.addr2line-0.24.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__adler2-2.0.0",
        sha256 = "512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/adler2/2.0.0/download"],
        strip_prefix = "adler2-2.0.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.adler2-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__allocator-api2-0.2.20",
        sha256 = "45862d1c77f2228b9e10bc609d5bc203d86ebc9b87ad8d5d5167a6c9abf739d9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/allocator-api2/0.2.20/download"],
        strip_prefix = "allocator-api2-0.2.20",
        build_file = Label("@workerd//deps/rust/crates:BUILD.allocator-api2-0.2.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__anstyle-1.0.10",
        sha256 = "55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anstyle/1.0.10/download"],
        strip_prefix = "anstyle-1.0.10",
        build_file = Label("@workerd//deps/rust/crates:BUILD.anstyle-1.0.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__anyhow-1.0.93",
        sha256 = "4c95c10ba0b00a02636238b814946408b1322d5ac4760326e6fb8ec956d85775",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anyhow/1.0.93/download"],
        strip_prefix = "anyhow-1.0.93",
        build_file = Label("@workerd//deps/rust/crates:BUILD.anyhow-1.0.93.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__backtrace-0.3.74",
        sha256 = "8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/backtrace/0.3.74/download"],
        strip_prefix = "backtrace-0.3.74",
        build_file = Label("@workerd//deps/rust/crates:BUILD.backtrace-0.3.74.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__bitflags-1.3.2",
        sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bitflags/1.3.2/download"],
        strip_prefix = "bitflags-1.3.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.bitflags-1.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__bitflags-2.6.0",
        sha256 = "b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bitflags/2.6.0/download"],
        strip_prefix = "bitflags-2.6.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.bitflags-2.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__byteorder-1.5.0",
        sha256 = "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/byteorder/1.5.0/download"],
        strip_prefix = "byteorder-1.5.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.byteorder-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__capnp-0.20.3",
        sha256 = "bce4e2d41c16cf9188f47ca4d59fdcdca1f33705af211bdb41f0afbd3442f8b5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/capnp/0.20.3/download"],
        strip_prefix = "capnp-0.20.3",
        build_file = Label("@workerd//deps/rust/crates:BUILD.capnp-0.20.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__capnpc-0.20.1",
        sha256 = "1aa3d5f01e69ed11656d2c7c47bf34327ea9bfb5c85c7de787fcd7b6c5e45b61",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/capnpc/0.20.1/download"],
        strip_prefix = "capnpc-0.20.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.capnpc-0.20.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cc-1.2.1",
        sha256 = "fd9de9f2205d5ef3fd67e685b0df337994ddd4495e2a28d185500d0e1edfea47",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cc/1.2.1/download"],
        strip_prefix = "cc-1.2.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cc-1.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cfg-if-1.0.0",
        sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cfg-if/1.0.0/download"],
        strip_prefix = "cfg-if-1.0.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cfg-if-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cfg_aliases-0.2.1",
        sha256 = "613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cfg_aliases/0.2.1/download"],
        strip_prefix = "cfg_aliases-0.2.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cfg_aliases-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clang-ast-0.1.26",
        sha256 = "577457f7ace079a595017e4307c6e480902664ede6e4a0760747c4f498b7c996",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clang-ast/0.1.26/download"],
        strip_prefix = "clang-ast-0.1.26",
        build_file = Label("@workerd//deps/rust/crates:BUILD.clang-ast-0.1.26.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap-4.5.21",
        sha256 = "fb3b4b9e5a7c7514dfa52869339ee98b3156b0bfb4e8a77c4ff4babb64b1604f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap/4.5.21/download"],
        strip_prefix = "clap-4.5.21",
        build_file = Label("@workerd//deps/rust/crates:BUILD.clap-4.5.21.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap_builder-4.5.21",
        sha256 = "b17a95aa67cc7b5ebd32aa5370189aa0d79069ef1c64ce893bd30fb24bff20ec",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_builder/4.5.21/download"],
        strip_prefix = "clap_builder-4.5.21",
        build_file = Label("@workerd//deps/rust/crates:BUILD.clap_builder-4.5.21.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap_derive-4.5.18",
        sha256 = "4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_derive/4.5.18/download"],
        strip_prefix = "clap_derive-4.5.18",
        build_file = Label("@workerd//deps/rust/crates:BUILD.clap_derive-4.5.18.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap_lex-0.7.3",
        sha256 = "afb84c814227b90d6895e01398aee0d8033c00e7466aca416fb6a8e0eb19d8a7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_lex/0.7.3/download"],
        strip_prefix = "clap_lex-0.7.3",
        build_file = Label("@workerd//deps/rust/crates:BUILD.clap_lex-0.7.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__codespan-reporting-0.11.1",
        sha256 = "3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/codespan-reporting/0.11.1/download"],
        strip_prefix = "codespan-reporting-0.11.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.codespan-reporting-0.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__convert_case-0.4.0",
        sha256 = "6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/convert_case/0.4.0/download"],
        strip_prefix = "convert_case-0.4.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.convert_case-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__crc32fast-1.4.2",
        sha256 = "a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crc32fast/1.4.2/download"],
        strip_prefix = "crc32fast-1.4.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.crc32fast-1.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cssparser-0.27.2",
        sha256 = "754b69d351cdc2d8ee09ae203db831e005560fc6030da058f86ad60c92a9cb0a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cssparser/0.27.2/download"],
        strip_prefix = "cssparser-0.27.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cssparser-0.27.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cssparser-macros-0.6.1",
        sha256 = "13b588ba4ac1a99f7f2964d24b3d896ddc6bf847ee3855dbd4366f058cfcd331",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cssparser-macros/0.6.1/download"],
        strip_prefix = "cssparser-macros-0.6.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cssparser-macros-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cxx-1.0.130",
        sha256 = "23c042a0ba58aaff55299632834d1ea53ceff73d62373f62c9ae60890ad1b942",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cxx/1.0.130/download"],
        strip_prefix = "cxx-1.0.130",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cxx-1.0.130.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cxxbridge-flags-1.0.130",
        sha256 = "aa7ed7d30b289e2592cc55bc2ccd89803a63c913e008e6eb59f06cddf45bb52f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cxxbridge-flags/1.0.130/download"],
        strip_prefix = "cxxbridge-flags-1.0.130",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cxxbridge-flags-1.0.130.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cxxbridge-macro-1.0.130",
        sha256 = "0b8c465d22de46b851c04630a5fc749a26005b263632ed2e0d9cc81518ead78d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cxxbridge-macro/1.0.130/download"],
        strip_prefix = "cxxbridge-macro-1.0.130",
        build_file = Label("@workerd//deps/rust/crates:BUILD.cxxbridge-macro-1.0.130.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__derive_more-0.99.18",
        sha256 = "5f33878137e4dafd7fa914ad4e259e18a4e8e532b9617a2d0150262bf53abfce",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/derive_more/0.99.18/download"],
        strip_prefix = "derive_more-0.99.18",
        build_file = Label("@workerd//deps/rust/crates:BUILD.derive_more-0.99.18.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__dtoa-1.0.9",
        sha256 = "dcbb2bf8e87535c23f7a8a321e364ce21462d0ff10cb6407820e8e96dfff6653",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dtoa/1.0.9/download"],
        strip_prefix = "dtoa-1.0.9",
        build_file = Label("@workerd//deps/rust/crates:BUILD.dtoa-1.0.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__dtoa-short-0.3.5",
        sha256 = "cd1511a7b6a56299bd043a9c167a6d2bfb37bf84a6dfceaba651168adfb43c87",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dtoa-short/0.3.5/download"],
        strip_prefix = "dtoa-short-0.3.5",
        build_file = Label("@workerd//deps/rust/crates:BUILD.dtoa-short-0.3.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__embedded-io-0.6.1",
        sha256 = "edd0f118536f44f5ccd48bcb8b111bdc3de888b58c74639dfb034a357d0f206d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/embedded-io/0.6.1/download"],
        strip_prefix = "embedded-io-0.6.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.embedded-io-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__encoding_rs-0.8.35",
        sha256 = "75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/encoding_rs/0.8.35/download"],
        strip_prefix = "encoding_rs-0.8.35",
        build_file = Label("@workerd//deps/rust/crates:BUILD.encoding_rs-0.8.35.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__equivalent-1.0.1",
        sha256 = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/equivalent/1.0.1/download"],
        strip_prefix = "equivalent-1.0.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.equivalent-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__flate2-1.0.35",
        sha256 = "c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/flate2/1.0.35/download"],
        strip_prefix = "flate2-1.0.35",
        build_file = Label("@workerd//deps/rust/crates:BUILD.flate2-1.0.35.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__foldhash-0.1.3",
        sha256 = "f81ec6369c545a7d40e4589b5597581fa1c441fe1cce96dd1de43159910a36a2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/foldhash/0.1.3/download"],
        strip_prefix = "foldhash-0.1.3",
        build_file = Label("@workerd//deps/rust/crates:BUILD.foldhash-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__fxhash-0.2.1",
        sha256 = "c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fxhash/0.2.1/download"],
        strip_prefix = "fxhash-0.2.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.fxhash-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__getrandom-0.1.16",
        sha256 = "8fc3cb4d91f53b50155bdcfd23f6a4c39ae1969c2ae85982b135750cccaf5fce",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/getrandom/0.1.16/download"],
        strip_prefix = "getrandom-0.1.16",
        build_file = Label("@workerd//deps/rust/crates:BUILD.getrandom-0.1.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__gimli-0.31.1",
        sha256 = "07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/gimli/0.31.1/download"],
        strip_prefix = "gimli-0.31.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.gimli-0.31.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__hashbrown-0.15.1",
        sha256 = "3a9bfc1af68b1726ea47d3d5109de126281def866b33970e10fbab11b5dafab3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hashbrown/0.15.1/download"],
        strip_prefix = "hashbrown-0.15.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.hashbrown-0.15.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__heck-0.5.0",
        sha256 = "2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/heck/0.5.0/download"],
        strip_prefix = "heck-0.5.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.heck-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__hermit-abi-0.3.9",
        sha256 = "d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hermit-abi/0.3.9/download"],
        strip_prefix = "hermit-abi-0.3.9",
        build_file = Label("@workerd//deps/rust/crates:BUILD.hermit-abi-0.3.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__itoa-0.4.8",
        sha256 = "b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itoa/0.4.8/download"],
        strip_prefix = "itoa-0.4.8",
        build_file = Label("@workerd//deps/rust/crates:BUILD.itoa-0.4.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__itoa-1.0.11",
        sha256 = "49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itoa/1.0.11/download"],
        strip_prefix = "itoa-1.0.11",
        build_file = Label("@workerd//deps/rust/crates:BUILD.itoa-1.0.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__lazy_static-1.5.0",
        sha256 = "bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lazy_static/1.5.0/download"],
        strip_prefix = "lazy_static-1.5.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.lazy_static-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__lazycell-1.3.0",
        sha256 = "830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/lazycell/1.3.0/download"],
        strip_prefix = "lazycell-1.3.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.lazycell-1.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__libc-0.2.162",
        sha256 = "18d287de67fe55fd7e1581fe933d965a5a9477b38e949cfa9f8574ef01506398",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/libc/0.2.162/download"],
        strip_prefix = "libc-0.2.162",
        build_file = Label("@workerd//deps/rust/crates:BUILD.libc-0.2.162.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__link-cplusplus-1.0.9",
        sha256 = "9d240c6f7e1ba3a28b0249f774e6a9dd0175054b52dfbb61b16eb8505c3785c9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/link-cplusplus/1.0.9/download"],
        strip_prefix = "link-cplusplus-1.0.9",
        build_file = Label("@workerd//deps/rust/crates:BUILD.link-cplusplus-1.0.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__log-0.4.22",
        sha256 = "a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/log/0.4.22/download"],
        strip_prefix = "log-0.4.22",
        build_file = Label("@workerd//deps/rust/crates:BUILD.log-0.4.22.bazel"),
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__lol_html-2.0.0",
        commit = "a161bb319a61ddfb4c66e29153bbf8d6491f28cf",
        init_submodules = True,
        remote = "https://github.com/cloudflare/lol-html.git",
        build_file = Label("@workerd//deps/rust/crates:BUILD.lol_html-2.0.0.bazel"),
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__lolhtml-1.1.2",
        commit = "a161bb319a61ddfb4c66e29153bbf8d6491f28cf",
        init_submodules = True,
        remote = "https://github.com/cloudflare/lol-html.git",
        build_file = Label("@workerd//deps/rust/crates:BUILD.lolhtml-1.1.2.bazel"),
        strip_prefix = "c-api",
    )

    maybe(
        http_archive,
        name = "crates_vendor__matches-0.1.10",
        sha256 = "2532096657941c2fea9c289d370a250971c689d4f143798ff67113ec042024a5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/matches/0.1.10/download"],
        strip_prefix = "matches-0.1.10",
        build_file = Label("@workerd//deps/rust/crates:BUILD.matches-0.1.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__memchr-2.7.4",
        sha256 = "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/memchr/2.7.4/download"],
        strip_prefix = "memchr-2.7.4",
        build_file = Label("@workerd//deps/rust/crates:BUILD.memchr-2.7.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mime-0.3.17",
        sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mime/0.3.17/download"],
        strip_prefix = "mime-0.3.17",
        build_file = Label("@workerd//deps/rust/crates:BUILD.mime-0.3.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__miniz_oxide-0.8.0",
        sha256 = "e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/miniz_oxide/0.8.0/download"],
        strip_prefix = "miniz_oxide-0.8.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.miniz_oxide-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mio-1.0.2",
        sha256 = "80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mio/1.0.2/download"],
        strip_prefix = "mio-1.0.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.mio-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__nix-0.29.0",
        sha256 = "71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nix/0.29.0/download"],
        strip_prefix = "nix-0.29.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.nix-0.29.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__nodrop-0.1.14",
        sha256 = "72ef4a56884ca558e5ddb05a1d1e7e1bfd9a68d9ed024c21704cc98872dae1bb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nodrop/0.1.14/download"],
        strip_prefix = "nodrop-0.1.14",
        build_file = Label("@workerd//deps/rust/crates:BUILD.nodrop-0.1.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__object-0.36.5",
        sha256 = "aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/object/0.36.5/download"],
        strip_prefix = "object-0.36.5",
        build_file = Label("@workerd//deps/rust/crates:BUILD.object-0.36.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__once_cell-1.20.2",
        sha256 = "1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/once_cell/1.20.2/download"],
        strip_prefix = "once_cell-1.20.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.once_cell-1.20.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf-0.8.0",
        sha256 = "3dfb61232e34fcb633f43d12c58f83c1df82962dcdfa565a4e866ffc17dafe12",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf/0.8.0/download"],
        strip_prefix = "phf-0.8.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.phf-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_codegen-0.8.0",
        sha256 = "cbffee61585b0411840d3ece935cce9cb6321f01c45477d30066498cd5e1a815",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_codegen/0.8.0/download"],
        strip_prefix = "phf_codegen-0.8.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.phf_codegen-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_generator-0.8.0",
        sha256 = "17367f0cc86f2d25802b2c26ee58a7b23faeccf78a396094c13dced0d0182526",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_generator/0.8.0/download"],
        strip_prefix = "phf_generator-0.8.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.phf_generator-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_macros-0.8.0",
        sha256 = "7f6fde18ff429ffc8fe78e2bf7f8b7a5a5a6e2a8b58bc5a9ac69198bbda9189c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_macros/0.8.0/download"],
        strip_prefix = "phf_macros-0.8.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.phf_macros-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_shared-0.8.0",
        sha256 = "c00cf8b9eafe68dde5e9eaa2cef8ee84a9336a47d566ec55ca16589633b65af7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_shared/0.8.0/download"],
        strip_prefix = "phf_shared-0.8.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.phf_shared-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pico-args-0.5.0",
        sha256 = "5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pico-args/0.5.0/download"],
        strip_prefix = "pico-args-0.5.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.pico-args-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pin-project-lite-0.2.15",
        sha256 = "915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pin-project-lite/0.2.15/download"],
        strip_prefix = "pin-project-lite-0.2.15",
        build_file = Label("@workerd//deps/rust/crates:BUILD.pin-project-lite-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__ppv-lite86-0.2.20",
        sha256 = "77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ppv-lite86/0.2.20/download"],
        strip_prefix = "ppv-lite86-0.2.20",
        build_file = Label("@workerd//deps/rust/crates:BUILD.ppv-lite86-0.2.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__precomputed-hash-0.1.1",
        sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/precomputed-hash/0.1.1/download"],
        strip_prefix = "precomputed-hash-0.1.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.precomputed-hash-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__proc-macro-hack-0.5.20-deprecated",
        sha256 = "dc375e1527247fe1a97d8b7156678dfe7c1af2fc075c9a4db3690ecd2a148068",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/proc-macro-hack/0.5.20+deprecated/download"],
        strip_prefix = "proc-macro-hack-0.5.20+deprecated",
        build_file = Label("@workerd//deps/rust/crates:BUILD.proc-macro-hack-0.5.20+deprecated.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__proc-macro2-1.0.89",
        sha256 = "f139b0662de085916d1fb67d2b4169d1addddda1919e696f3252b740b629986e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/proc-macro2/1.0.89/download"],
        strip_prefix = "proc-macro2-1.0.89",
        build_file = Label("@workerd//deps/rust/crates:BUILD.proc-macro2-1.0.89.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__quote-1.0.37",
        sha256 = "b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quote/1.0.37/download"],
        strip_prefix = "quote-1.0.37",
        build_file = Label("@workerd//deps/rust/crates:BUILD.quote-1.0.37.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand-0.7.3",
        sha256 = "6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand/0.7.3/download"],
        strip_prefix = "rand-0.7.3",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rand-0.7.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_chacha-0.2.2",
        sha256 = "f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_chacha/0.2.2/download"],
        strip_prefix = "rand_chacha-0.2.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rand_chacha-0.2.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_core-0.5.1",
        sha256 = "90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_core/0.5.1/download"],
        strip_prefix = "rand_core-0.5.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rand_core-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_hc-0.2.0",
        sha256 = "ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_hc/0.2.0/download"],
        strip_prefix = "rand_hc-0.2.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rand_hc-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_pcg-0.2.1",
        sha256 = "16abd0c1b639e9eb4d7c50c0b8100b0d0f849be2349829c740fe8e6eb4816429",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_pcg/0.2.1/download"],
        strip_prefix = "rand_pcg-0.2.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rand_pcg-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustc-demangle-0.1.24",
        sha256 = "719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc-demangle/0.1.24/download"],
        strip_prefix = "rustc-demangle-0.1.24",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rustc-demangle-0.1.24.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustc-hash-2.0.0",
        sha256 = "583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc-hash/2.0.0/download"],
        strip_prefix = "rustc-hash-2.0.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rustc-hash-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustc_version-0.4.1",
        sha256 = "cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc_version/0.4.1/download"],
        strip_prefix = "rustc_version-0.4.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rustc_version-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustversion-1.0.18",
        sha256 = "0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustversion/1.0.18/download"],
        strip_prefix = "rustversion-1.0.18",
        build_file = Label("@workerd//deps/rust/crates:BUILD.rustversion-1.0.18.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__ryu-1.0.18",
        sha256 = "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ryu/1.0.18/download"],
        strip_prefix = "ryu-1.0.18",
        build_file = Label("@workerd//deps/rust/crates:BUILD.ryu-1.0.18.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__selectors-0.22.0",
        sha256 = "df320f1889ac4ba6bc0cdc9c9af7af4bd64bb927bccdf32d81140dc1f9be12fe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/selectors/0.22.0/download"],
        strip_prefix = "selectors-0.22.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.selectors-0.22.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__semver-1.0.23",
        sha256 = "61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/semver/1.0.23/download"],
        strip_prefix = "semver-1.0.23",
        build_file = Label("@workerd//deps/rust/crates:BUILD.semver-1.0.23.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__serde-1.0.215",
        sha256 = "6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde/1.0.215/download"],
        strip_prefix = "serde-1.0.215",
        build_file = Label("@workerd//deps/rust/crates:BUILD.serde-1.0.215.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__serde_derive-1.0.215",
        sha256 = "ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_derive/1.0.215/download"],
        strip_prefix = "serde_derive-1.0.215",
        build_file = Label("@workerd//deps/rust/crates:BUILD.serde_derive-1.0.215.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__serde_json-1.0.132",
        sha256 = "d726bfaff4b320266d395898905d0eba0345aae23b54aee3a737e260fd46db03",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_json/1.0.132/download"],
        strip_prefix = "serde_json-1.0.132",
        build_file = Label("@workerd//deps/rust/crates:BUILD.serde_json-1.0.132.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__servo_arc-0.1.1",
        sha256 = "d98238b800e0d1576d8b6e3de32827c2d74bee68bb97748dcf5071fb53965432",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/servo_arc/0.1.1/download"],
        strip_prefix = "servo_arc-0.1.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.servo_arc-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__shlex-1.3.0",
        sha256 = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/shlex/1.3.0/download"],
        strip_prefix = "shlex-1.3.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.shlex-1.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__siphasher-0.3.11",
        sha256 = "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/siphasher/0.3.11/download"],
        strip_prefix = "siphasher-0.3.11",
        build_file = Label("@workerd//deps/rust/crates:BUILD.siphasher-0.3.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__smallvec-1.13.2",
        sha256 = "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/smallvec/1.13.2/download"],
        strip_prefix = "smallvec-1.13.2",
        build_file = Label("@workerd//deps/rust/crates:BUILD.smallvec-1.13.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__socket2-0.5.7",
        sha256 = "ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/socket2/0.5.7/download"],
        strip_prefix = "socket2-0.5.7",
        build_file = Label("@workerd//deps/rust/crates:BUILD.socket2-0.5.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__stable_deref_trait-1.2.0",
        sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/stable_deref_trait/1.2.0/download"],
        strip_prefix = "stable_deref_trait-1.2.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.stable_deref_trait-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__strsim-0.11.1",
        sha256 = "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/strsim/0.11.1/download"],
        strip_prefix = "strsim-0.11.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.strsim-0.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__syn-1.0.109",
        sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/syn/1.0.109/download"],
        strip_prefix = "syn-1.0.109",
        build_file = Label("@workerd//deps/rust/crates:BUILD.syn-1.0.109.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__syn-2.0.87",
        sha256 = "25aa4ce346d03a6dcd68dd8b4010bcb74e54e62c90c573f394c46eae99aba32d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/syn/2.0.87/download"],
        strip_prefix = "syn-2.0.87",
        build_file = Label("@workerd//deps/rust/crates:BUILD.syn-2.0.87.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__termcolor-1.4.1",
        sha256 = "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/termcolor/1.4.1/download"],
        strip_prefix = "termcolor-1.4.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.termcolor-1.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__thin-slice-0.1.1",
        sha256 = "8eaa81235c7058867fa8c0e7314f33dcce9c215f535d1913822a2b3f5e289f3c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thin-slice/0.1.1/download"],
        strip_prefix = "thin-slice-0.1.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.thin-slice-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__thiserror-1.0.69",
        sha256 = "b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror/1.0.69/download"],
        strip_prefix = "thiserror-1.0.69",
        build_file = Label("@workerd//deps/rust/crates:BUILD.thiserror-1.0.69.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__thiserror-impl-1.0.69",
        sha256 = "4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror-impl/1.0.69/download"],
        strip_prefix = "thiserror-impl-1.0.69",
        build_file = Label("@workerd//deps/rust/crates:BUILD.thiserror-impl-1.0.69.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-1.41.1",
        sha256 = "22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio/1.41.1/download"],
        strip_prefix = "tokio-1.41.1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.tokio-1.41.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-0.1.40",
        sha256 = "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing/0.1.40/download"],
        strip_prefix = "tracing-0.1.40",
        build_file = Label("@workerd//deps/rust/crates:BUILD.tracing-0.1.40.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-core-0.1.32",
        sha256 = "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-core/0.1.32/download"],
        strip_prefix = "tracing-core-0.1.32",
        build_file = Label("@workerd//deps/rust/crates:BUILD.tracing-core-0.1.32.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode-ident-1.0.13",
        sha256 = "e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-ident/1.0.13/download"],
        strip_prefix = "unicode-ident-1.0.13",
        build_file = Label("@workerd//deps/rust/crates:BUILD.unicode-ident-1.0.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode-width-0.1.14",
        sha256 = "7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-width/0.1.14/download"],
        strip_prefix = "unicode-width-0.1.14",
        build_file = Label("@workerd//deps/rust/crates:BUILD.unicode-width-0.1.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasi-0.11.0-wasi-snapshot-preview1",
        sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasi/0.11.0+wasi-snapshot-preview1/download"],
        strip_prefix = "wasi-0.11.0+wasi-snapshot-preview1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasi-0.9.0-wasi-snapshot-preview1",
        sha256 = "cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasi/0.9.0+wasi-snapshot-preview1/download"],
        strip_prefix = "wasi-0.9.0+wasi-snapshot-preview1",
        build_file = Label("@workerd//deps/rust/crates:BUILD.wasi-0.9.0+wasi-snapshot-preview1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__winapi-util-0.1.9",
        sha256 = "cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/winapi-util/0.1.9/download"],
        strip_prefix = "winapi-util-0.1.9",
        build_file = Label("@workerd//deps/rust/crates:BUILD.winapi-util-0.1.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows-sys-0.52.0",
        sha256 = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-sys/0.52.0/download"],
        strip_prefix = "windows-sys-0.52.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows-sys-0.52.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows-sys-0.59.0",
        sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-sys/0.59.0/download"],
        strip_prefix = "windows-sys-0.59.0",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows-sys-0.59.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows-targets-0.52.6",
        sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-targets/0.52.6/download"],
        strip_prefix = "windows-targets-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows-targets-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_aarch64_gnullvm-0.52.6",
        sha256 = "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_aarch64_gnullvm/0.52.6/download"],
        strip_prefix = "windows_aarch64_gnullvm-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_aarch64_gnullvm-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_aarch64_msvc-0.52.6",
        sha256 = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_aarch64_msvc/0.52.6/download"],
        strip_prefix = "windows_aarch64_msvc-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_aarch64_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_gnu-0.52.6",
        sha256 = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_i686_gnu/0.52.6/download"],
        strip_prefix = "windows_i686_gnu-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_i686_gnu-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_gnullvm-0.52.6",
        sha256 = "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_i686_gnullvm/0.52.6/download"],
        strip_prefix = "windows_i686_gnullvm-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_i686_gnullvm-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_msvc-0.52.6",
        sha256 = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_i686_msvc/0.52.6/download"],
        strip_prefix = "windows_i686_msvc-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_i686_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_gnu-0.52.6",
        sha256 = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_gnu/0.52.6/download"],
        strip_prefix = "windows_x86_64_gnu-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_x86_64_gnu-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_gnullvm-0.52.6",
        sha256 = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_gnullvm/0.52.6/download"],
        strip_prefix = "windows_x86_64_gnullvm-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_x86_64_gnullvm-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_msvc-0.52.6",
        sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_msvc/0.52.6/download"],
        strip_prefix = "windows_x86_64_msvc-0.52.6",
        build_file = Label("@workerd//deps/rust/crates:BUILD.windows_x86_64_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__zerocopy-0.7.35",
        sha256 = "1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerocopy/0.7.35/download"],
        strip_prefix = "zerocopy-0.7.35",
        build_file = Label("@workerd//deps/rust/crates:BUILD.zerocopy-0.7.35.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__zerocopy-derive-0.7.35",
        sha256 = "fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerocopy-derive/0.7.35/download"],
        strip_prefix = "zerocopy-derive-0.7.35",
        build_file = Label("@workerd//deps/rust/crates:BUILD.zerocopy-derive-0.7.35.bazel"),
    )

    return [
        struct(repo = "crates_vendor__anyhow-1.0.93", is_dev_dep = False),
        struct(repo = "crates_vendor__capnp-0.20.3", is_dev_dep = False),
        struct(repo = "crates_vendor__capnpc-0.20.1", is_dev_dep = False),
        struct(repo = "crates_vendor__clang-ast-0.1.26", is_dev_dep = False),
        struct(repo = "crates_vendor__clap-4.5.21", is_dev_dep = False),
        struct(repo = "crates_vendor__codespan-reporting-0.11.1", is_dev_dep = False),
        struct(repo = "crates_vendor__cxx-1.0.130", is_dev_dep = False),
        struct(repo = "crates_vendor__flate2-1.0.35", is_dev_dep = False),
        struct(repo = "crates_vendor__lolhtml-1.1.2", is_dev_dep = False),
        struct(repo = "crates_vendor__nix-0.29.0", is_dev_dep = False),
        struct(repo = "crates_vendor__pico-args-0.5.0", is_dev_dep = False),
        struct(repo = "crates_vendor__proc-macro2-1.0.89", is_dev_dep = False),
        struct(repo = "crates_vendor__quote-1.0.37", is_dev_dep = False),
        struct(repo = "crates_vendor__serde-1.0.215", is_dev_dep = False),
        struct(repo = "crates_vendor__serde_json-1.0.132", is_dev_dep = False),
        struct(repo = "crates_vendor__syn-2.0.87", is_dev_dep = False),
        struct(repo = "crates_vendor__tokio-1.41.1", is_dev_dep = False),
        struct(repo = "crates_vendor__tracing-0.1.40", is_dev_dep = False),
    ]
