###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @@//deps/rust:crates_vendor
###############################################################################
"""
# `crates_repository` API

- [aliases](#aliases)
- [crate_deps](#crate_deps)
- [all_crate_deps](#all_crate_deps)
- [crate_repositories](#crate_repositories)

"""

load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

###############################################################################
# MACROS API
###############################################################################

# An identifier that represent common dependencies (unconditional).
_COMMON_CONDITION = ""

def _flatten_dependency_maps(all_dependency_maps):
    """Flatten a list of dependency maps into one dictionary.

    Dependency maps have the following structure:

    ```python
    DEPENDENCIES_MAP = {
        # The first key in the map is a Bazel package
        # name of the workspace this file is defined in.
        "workspace_member_package": {

            # Not all dependencies are supported for all platforms.
            # the condition key is the condition required to be true
            # on the host platform.
            "condition": {

                # An alias to a crate target.     # The label of the crate target the
                # Aliases are only crate names.   # package name refers to.
                "package_name":                   "@full//:label",
            }
        }
    }
    ```

    Args:
        all_dependency_maps (list): A list of dicts as described above

    Returns:
        dict: A dictionary as described above
    """
    dependencies = {}

    for workspace_deps_map in all_dependency_maps:
        for pkg_name, conditional_deps_map in workspace_deps_map.items():
            if pkg_name not in dependencies:
                non_frozen_map = dict()
                for key, values in conditional_deps_map.items():
                    non_frozen_map.update({key: dict(values.items())})
                dependencies.setdefault(pkg_name, non_frozen_map)
                continue

            for condition, deps_map in conditional_deps_map.items():
                # If the condition has not been recorded, do so and continue
                if condition not in dependencies[pkg_name]:
                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))
                    continue

                # Alert on any miss-matched dependencies
                inconsistent_entries = []
                for crate_name, crate_label in deps_map.items():
                    existing = dependencies[pkg_name][condition].get(crate_name)
                    if existing and existing != crate_label:
                        inconsistent_entries.append((crate_name, existing, crate_label))
                    dependencies[pkg_name][condition].update({crate_name: crate_label})

    return dependencies

def crate_deps(deps, package_name = None):
    """Finds the fully qualified label of the requested crates for the package where this macro is called.

    Args:
        deps (list): The desired list of crate targets.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if not deps:
        return []

    if package_name == None:
        package_name = native.package_name()

    # Join both sets of dependencies
    dependencies = _flatten_dependency_maps([
        _NORMAL_DEPENDENCIES,
        _NORMAL_DEV_DEPENDENCIES,
        _PROC_MACRO_DEPENDENCIES,
        _PROC_MACRO_DEV_DEPENDENCIES,
        _BUILD_DEPENDENCIES,
        _BUILD_PROC_MACRO_DEPENDENCIES,
    ]).pop(package_name, {})

    # Combine all conditional packages so we can easily index over a flat list
    # TODO: Perhaps this should actually return select statements and maintain
    # the conditionals of the dependencies
    flat_deps = {}
    for deps_set in dependencies.values():
        for crate_name, crate_label in deps_set.items():
            flat_deps.update({crate_name: crate_label})

    missing_crates = []
    crate_targets = []
    for crate_target in deps:
        if crate_target not in flat_deps:
            missing_crates.append(crate_target)
        else:
            crate_targets.append(flat_deps[crate_target])

    if missing_crates:
        fail("Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`".format(
            missing_crates,
            package_name,
            dependencies,
        ))

    return crate_targets

def all_crate_deps(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Finds the fully qualified label of all requested direct crate dependencies \
    for the package where this macro is called.

    If no parameters are set, all normal dependencies are returned. Setting any one flag will
    otherwise impact the contents of the returned list.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_dependency_maps = []
    if normal:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)
    if normal_dev:
        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)
    if proc_macro:
        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)
    if proc_macro_dev:
        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)
    if build:
        all_dependency_maps.append(_BUILD_DEPENDENCIES)
    if build_proc_macro:
        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)

    # Default to always using normal dependencies
    if not all_dependency_maps:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)

    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)

    if not dependencies:
        if dependencies == None:
            fail("Tried to get all_crate_deps for package " + package_name + " but that package had no Cargo.toml file")
        else:
            return []

    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())
    for condition, deps in dependencies.items():
        crate_deps += selects.with_or({
            tuple(_CONDITIONS[condition]): deps.values(),
            "//conditions:default": [],
        })

    return crate_deps

def aliases(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Produces a map of Crate alias names to their original label

    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.
    Setting any one flag will otherwise determine the contents of the returned dict.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        dict: The aliases of all associated packages
    """
    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_aliases_maps = []
    if normal:
        all_aliases_maps.append(_NORMAL_ALIASES)
    if normal_dev:
        all_aliases_maps.append(_NORMAL_DEV_ALIASES)
    if proc_macro:
        all_aliases_maps.append(_PROC_MACRO_ALIASES)
    if proc_macro_dev:
        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)
    if build:
        all_aliases_maps.append(_BUILD_ALIASES)
    if build_proc_macro:
        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)

    # Default to always using normal aliases
    if not all_aliases_maps:
        all_aliases_maps.append(_NORMAL_ALIASES)
        all_aliases_maps.append(_PROC_MACRO_ALIASES)

    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)

    if not aliases:
        return dict()

    common_items = aliases.pop(_COMMON_CONDITION, {}).items()

    # If there are only common items in the dictionary, immediately return them
    if not len(aliases.keys()) == 1:
        return dict(common_items)

    # Build a single select statement where each conditional has accounted for the
    # common set of aliases.
    crate_aliases = {"//conditions:default": dict(common_items)}
    for condition, deps in aliases.items():
        condition_triples = _CONDITIONS[condition]
        for triple in condition_triples:
            if triple in crate_aliases:
                crate_aliases[triple].update(deps)
            else:
                crate_aliases.update({triple: dict(deps.items() + common_items)})

    return select(crate_aliases)

###############################################################################
# WORKSPACE MEMBER DEPS AND ALIASES
###############################################################################

_NORMAL_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "anyhow": Label("@crates_vendor//:anyhow-1.0.98"),
            "capnp": Label("@crates_vendor//:capnp-0.21.4"),
            "capnpc": Label("@crates_vendor//:capnpc-0.21.2"),
            "cc": Label("@crates_vendor//:cc-1.2.32"),
            "clang-ast": Label("@crates_vendor//:clang-ast-0.1.31"),
            "clap": Label("@crates_vendor//:clap-4.5.43"),
            "codespan-reporting": Label("@crates_vendor//:codespan-reporting-0.12.0"),
            "flate2": Label("@crates_vendor//:flate2-1.1.2"),
            "foldhash": Label("@crates_vendor//:foldhash-0.1.5"),
            "futures": Label("@crates_vendor//:futures-0.3.31"),
            "lol_html_c_api": Label("@crates_vendor//:lol_html_c_api-1.3.0"),
            "nix": Label("@crates_vendor//:nix-0.30.1"),
            "pico-args": Label("@crates_vendor//:pico-args-0.5.0"),
            "proc-macro2": Label("@crates_vendor//:proc-macro2-1.0.95"),
            "quote": Label("@crates_vendor//:quote-1.0.40"),
            "ruff_python_ast": Label("@crates_vendor//:ruff_python_ast-0.0.0"),
            "ruff_python_parser": Label("@crates_vendor//:ruff_python_parser-0.0.0"),
            "scratch": Label("@crates_vendor//:scratch-1.0.9"),
            "serde": Label("@crates_vendor//:serde-1.0.219"),
            "serde_json": Label("@crates_vendor//:serde_json-1.0.142"),
            "static_assertions": Label("@crates_vendor//:static_assertions-1.1.0"),
            "syn": Label("@crates_vendor//:syn-2.0.104"),
            "thiserror": Label("@crates_vendor//:thiserror-2.0.12"),
            "tokio": Label("@crates_vendor//:tokio-1.47.1"),
            "tracing": Label("@crates_vendor//:tracing-0.1.41"),
        },
    },
}

_NORMAL_ALIASES = {
    "": {
        _COMMON_CONDITION: {
        },
    },
}

_NORMAL_DEV_DEPENDENCIES = {
    "": {
    },
}

_NORMAL_DEV_ALIASES = {
    "": {
    },
}

_PROC_MACRO_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "rustversion": Label("@crates_vendor//:rustversion-1.0.22"),
        },
    },
}

_PROC_MACRO_ALIASES = {
    "": {
    },
}

_PROC_MACRO_DEV_DEPENDENCIES = {
    "": {
    },
}

_PROC_MACRO_DEV_ALIASES = {
    "": {
    },
}

_BUILD_DEPENDENCIES = {
    "": {
    },
}

_BUILD_ALIASES = {
    "": {
    },
}

_BUILD_PROC_MACRO_DEPENDENCIES = {
    "": {
    },
}

_BUILD_PROC_MACRO_ALIASES = {
    "": {
    },
}

_CONDITIONS = {
    "aarch64-apple-darwin": ["@rules_rust//rust/platform:aarch64-apple-darwin"],
    "aarch64-pc-windows-gnullvm": [],
    "aarch64-unknown-linux-gnu": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "cfg(all(any(target_arch = \"x86_64\", target_arch = \"arm64ec\"), target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(all(target_arch = \"aarch64\", target_env = \"msvc\", not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86\", target_env = \"msvc\", not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(tokio_uring, target_os = \"linux\"))": [],
    "cfg(any())": [],
    "cfg(any(windows, target_os = \"cygwin\"))": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(not(all(windows, target_env = \"msvc\", not(target_vendor = \"uwp\"))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(target_os = \"hermit\")": [],
    "cfg(target_os = \"wasi\")": [],
    "cfg(tokio_taskdump)": [],
    "cfg(unix)": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(windows)": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "i686-pc-windows-gnullvm": [],
    "x86_64-apple-darwin": ["@rules_rust//rust/platform:x86_64-apple-darwin"],
    "x86_64-pc-windows-gnullvm": [],
    "x86_64-pc-windows-msvc": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "x86_64-unknown-linux-gnu": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
}

###############################################################################

def crate_repositories():
    """A macro for defining repositories for all generated crates.

    Returns:
      A list of repos visible to the module through the module extension.
    """
    maybe(
        http_archive,
        name = "crates_vendor__addr2line-0.24.2",
        sha256 = "dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/addr2line/0.24.2/download"],
        strip_prefix = "addr2line-0.24.2",
        build_file = Label("//deps/rust/crates:BUILD.addr2line-0.24.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__adler2-2.0.1",
        sha256 = "320119579fcad9c21884f5c4861d16174d0e06250625266f50fe6898340abefa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/adler2/2.0.1/download"],
        strip_prefix = "adler2-2.0.1",
        build_file = Label("//deps/rust/crates:BUILD.adler2-2.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__aho-corasick-1.1.3",
        sha256 = "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/aho-corasick/1.1.3/download"],
        strip_prefix = "aho-corasick-1.1.3",
        build_file = Label("//deps/rust/crates:BUILD.aho-corasick-1.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__allocator-api2-0.2.21",
        sha256 = "683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/allocator-api2/0.2.21/download"],
        strip_prefix = "allocator-api2-0.2.21",
        build_file = Label("//deps/rust/crates:BUILD.allocator-api2-0.2.21.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__anstyle-1.0.11",
        sha256 = "862ed96ca487e809f1c8e5a8447f6ee2cf102f846893800b20cebdf541fc6bbd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anstyle/1.0.11/download"],
        strip_prefix = "anstyle-1.0.11",
        build_file = Label("//deps/rust/crates:BUILD.anstyle-1.0.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__anyhow-1.0.98",
        sha256 = "e16d2d3311acee920a9eb8d33b8cbc1787ce4a264e85f964c2404b969bdcd487",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/anyhow/1.0.98/download"],
        strip_prefix = "anyhow-1.0.98",
        build_file = Label("//deps/rust/crates:BUILD.anyhow-1.0.98.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__backtrace-0.3.75",
        sha256 = "6806a6321ec58106fea15becdad98371e28d92ccbc7c8f1b3b6dd724fe8f1002",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/backtrace/0.3.75/download"],
        strip_prefix = "backtrace-0.3.75",
        build_file = Label("//deps/rust/crates:BUILD.backtrace-0.3.75.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__bitflags-2.9.1",
        sha256 = "1b8e56985ec62d17e9c1001dc89c88ecd7dc08e47eba5ec7c29c7b5eeecde967",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bitflags/2.9.1/download"],
        strip_prefix = "bitflags-2.9.1",
        build_file = Label("//deps/rust/crates:BUILD.bitflags-2.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__bstr-1.12.0",
        sha256 = "234113d19d0d7d613b40e86fb654acf958910802bcceab913a4f9e7cda03b1a4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/bstr/1.12.0/download"],
        strip_prefix = "bstr-1.12.0",
        build_file = Label("//deps/rust/crates:BUILD.bstr-1.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__byteorder-1.5.0",
        sha256 = "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/byteorder/1.5.0/download"],
        strip_prefix = "byteorder-1.5.0",
        build_file = Label("//deps/rust/crates:BUILD.byteorder-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__capnp-0.21.4",
        sha256 = "def25bdbbc2758b363d79129c7f277520e3347e8b647c404d4823591f837c4ad",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/capnp/0.21.4/download"],
        strip_prefix = "capnp-0.21.4",
        build_file = Label("//deps/rust/crates:BUILD.capnp-0.21.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__capnpc-0.21.2",
        sha256 = "d93a18ec8176d4a87f1852b6a560b4196729365c01ba3cad03b73a376a23c56e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/capnpc/0.21.2/download"],
        strip_prefix = "capnpc-0.21.2",
        build_file = Label("//deps/rust/crates:BUILD.capnpc-0.21.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__castaway-0.2.4",
        sha256 = "dec551ab6e7578819132c713a93c022a05d60159dc86e7a7050223577484c55a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/castaway/0.2.4/download"],
        strip_prefix = "castaway-0.2.4",
        build_file = Label("//deps/rust/crates:BUILD.castaway-0.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cc-1.2.32",
        sha256 = "2352e5597e9c544d5e6d9c95190d5d27738ade584fa8db0a16e130e5c2b5296e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cc/1.2.32/download"],
        strip_prefix = "cc-1.2.32",
        build_file = Label("//deps/rust/crates:BUILD.cc-1.2.32.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cfg-if-1.0.1",
        sha256 = "9555578bc9e57714c812a1f84e4fc5b4d21fcb063490c624de019f7464c91268",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cfg-if/1.0.1/download"],
        strip_prefix = "cfg-if-1.0.1",
        build_file = Label("//deps/rust/crates:BUILD.cfg-if-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cfg_aliases-0.2.1",
        sha256 = "613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cfg_aliases/0.2.1/download"],
        strip_prefix = "cfg_aliases-0.2.1",
        build_file = Label("//deps/rust/crates:BUILD.cfg_aliases-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clang-ast-0.1.31",
        sha256 = "0f215fa69fa4265fc39aef0b1a1e724e62392da3dcc8c08f892dd323107e9a8d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clang-ast/0.1.31/download"],
        strip_prefix = "clang-ast-0.1.31",
        build_file = Label("//deps/rust/crates:BUILD.clang-ast-0.1.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap-4.5.43",
        sha256 = "50fd97c9dc2399518aa331917ac6f274280ec5eb34e555dd291899745c48ec6f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap/4.5.43/download"],
        strip_prefix = "clap-4.5.43",
        build_file = Label("//deps/rust/crates:BUILD.clap-4.5.43.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap_builder-4.5.43",
        sha256 = "c35b5830294e1fa0462034af85cc95225a4cb07092c088c55bda3147cfcd8f65",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_builder/4.5.43/download"],
        strip_prefix = "clap_builder-4.5.43",
        build_file = Label("//deps/rust/crates:BUILD.clap_builder-4.5.43.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap_derive-4.5.41",
        sha256 = "ef4f52386a59ca4c860f7393bcf8abd8dfd91ecccc0f774635ff68e92eeef491",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_derive/4.5.41/download"],
        strip_prefix = "clap_derive-4.5.41",
        build_file = Label("//deps/rust/crates:BUILD.clap_derive-4.5.41.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__clap_lex-0.7.5",
        sha256 = "b94f61472cee1439c0b966b47e3aca9ae07e45d070759512cd390ea2bebc6675",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/clap_lex/0.7.5/download"],
        strip_prefix = "clap_lex-0.7.5",
        build_file = Label("//deps/rust/crates:BUILD.clap_lex-0.7.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__codespan-reporting-0.12.0",
        sha256 = "fe6d2e5af09e8c8ad56c969f2157a3d4238cebc7c55f0a517728c38f7b200f81",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/codespan-reporting/0.12.0/download"],
        strip_prefix = "codespan-reporting-0.12.0",
        build_file = Label("//deps/rust/crates:BUILD.codespan-reporting-0.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__compact_str-0.9.0",
        sha256 = "3fdb1325a1cece981e8a296ab8f0f9b63ae357bd0784a9faaf548cc7b480707a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/compact_str/0.9.0/download"],
        strip_prefix = "compact_str-0.9.0",
        build_file = Label("//deps/rust/crates:BUILD.compact_str-0.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__crc32fast-1.5.0",
        sha256 = "9481c1c90cbf2ac953f07c8d4a58aa3945c425b7185c9154d67a65e4230da511",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/crc32fast/1.5.0/download"],
        strip_prefix = "crc32fast-1.5.0",
        build_file = Label("//deps/rust/crates:BUILD.crc32fast-1.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cssparser-0.35.0",
        sha256 = "4e901edd733a1472f944a45116df3f846f54d37e67e68640ac8bb69689aca2aa",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cssparser/0.35.0/download"],
        strip_prefix = "cssparser-0.35.0",
        build_file = Label("//deps/rust/crates:BUILD.cssparser-0.35.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cssparser-macros-0.6.1",
        sha256 = "13b588ba4ac1a99f7f2964d24b3d896ddc6bf847ee3855dbd4366f058cfcd331",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/cssparser-macros/0.6.1/download"],
        strip_prefix = "cssparser-macros-0.6.1",
        build_file = Label("//deps/rust/crates:BUILD.cssparser-macros-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__derive_more-0.99.20",
        sha256 = "6edb4b64a43d977b8e99788fe3a04d483834fba1215a7e02caa415b626497f7f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/derive_more/0.99.20/download"],
        strip_prefix = "derive_more-0.99.20",
        build_file = Label("//deps/rust/crates:BUILD.derive_more-0.99.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__dtoa-1.0.10",
        sha256 = "d6add3b8cff394282be81f3fc1a0605db594ed69890078ca6e2cab1c408bcf04",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dtoa/1.0.10/download"],
        strip_prefix = "dtoa-1.0.10",
        build_file = Label("//deps/rust/crates:BUILD.dtoa-1.0.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__dtoa-short-0.3.5",
        sha256 = "cd1511a7b6a56299bd043a9c167a6d2bfb37bf84a6dfceaba651168adfb43c87",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/dtoa-short/0.3.5/download"],
        strip_prefix = "dtoa-short-0.3.5",
        build_file = Label("//deps/rust/crates:BUILD.dtoa-short-0.3.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__either-1.15.0",
        sha256 = "48c757948c5ede0e46177b7add2e67155f70e33c07fea8284df6576da70b3719",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/either/1.15.0/download"],
        strip_prefix = "either-1.15.0",
        build_file = Label("//deps/rust/crates:BUILD.either-1.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__embedded-io-0.6.1",
        sha256 = "edd0f118536f44f5ccd48bcb8b111bdc3de888b58c74639dfb034a357d0f206d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/embedded-io/0.6.1/download"],
        strip_prefix = "embedded-io-0.6.1",
        build_file = Label("//deps/rust/crates:BUILD.embedded-io-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__encoding_rs-0.8.35",
        sha256 = "75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/encoding_rs/0.8.35/download"],
        strip_prefix = "encoding_rs-0.8.35",
        build_file = Label("//deps/rust/crates:BUILD.encoding_rs-0.8.35.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__equivalent-1.0.2",
        sha256 = "877a4ace8713b0bcf2a4e7eec82529c029f1d0619886d18145fea96c3ffe5c0f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/equivalent/1.0.2/download"],
        strip_prefix = "equivalent-1.0.2",
        build_file = Label("//deps/rust/crates:BUILD.equivalent-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__flate2-1.1.2",
        sha256 = "4a3d7db9596fecd151c5f638c0ee5d5bd487b6e0ea232e5dc96d5250f6f94b1d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/flate2/1.1.2/download"],
        strip_prefix = "flate2-1.1.2",
        build_file = Label("//deps/rust/crates:BUILD.flate2-1.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__foldhash-0.1.5",
        sha256 = "d9c4f5dac5e15c24eb999c26181a6ca40b39fe946cbe4c263c7209467bc83af2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/foldhash/0.1.5/download"],
        strip_prefix = "foldhash-0.1.5",
        build_file = Label("//deps/rust/crates:BUILD.foldhash-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-0.3.31",
        sha256 = "65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures/0.3.31/download"],
        strip_prefix = "futures-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-channel-0.3.31",
        sha256 = "2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-channel/0.3.31/download"],
        strip_prefix = "futures-channel-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-channel-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-core-0.3.31",
        sha256 = "05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-core/0.3.31/download"],
        strip_prefix = "futures-core-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-core-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-executor-0.3.31",
        sha256 = "1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-executor/0.3.31/download"],
        strip_prefix = "futures-executor-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-executor-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-io-0.3.31",
        sha256 = "9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-io/0.3.31/download"],
        strip_prefix = "futures-io-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-io-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-macro-0.3.31",
        sha256 = "162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-macro/0.3.31/download"],
        strip_prefix = "futures-macro-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-macro-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-sink-0.3.31",
        sha256 = "e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-sink/0.3.31/download"],
        strip_prefix = "futures-sink-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-sink-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-task-0.3.31",
        sha256 = "f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-task/0.3.31/download"],
        strip_prefix = "futures-task-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-task-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-util-0.3.31",
        sha256 = "9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/futures-util/0.3.31/download"],
        strip_prefix = "futures-util-0.3.31",
        build_file = Label("//deps/rust/crates:BUILD.futures-util-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__fxhash-0.2.1",
        sha256 = "c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/fxhash/0.2.1/download"],
        strip_prefix = "fxhash-0.2.1",
        build_file = Label("//deps/rust/crates:BUILD.fxhash-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__getopts-0.2.23",
        sha256 = "cba6ae63eb948698e300f645f87c70f76630d505f23b8907cf1e193ee85048c1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/getopts/0.2.23/download"],
        strip_prefix = "getopts-0.2.23",
        build_file = Label("//deps/rust/crates:BUILD.getopts-0.2.23.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__getrandom-0.2.16",
        sha256 = "335ff9f135e4384c8150d6f27c6daed433577f86b4750418338c01a1a2528592",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/getrandom/0.2.16/download"],
        strip_prefix = "getrandom-0.2.16",
        build_file = Label("//deps/rust/crates:BUILD.getrandom-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__gimli-0.31.1",
        sha256 = "07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/gimli/0.31.1/download"],
        strip_prefix = "gimli-0.31.1",
        build_file = Label("//deps/rust/crates:BUILD.gimli-0.31.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__hashbrown-0.15.5",
        sha256 = "9229cfe53dfd69f0609a49f65461bd93001ea1ef889cd5529dd176593f5338a1",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/hashbrown/0.15.5/download"],
        strip_prefix = "hashbrown-0.15.5",
        build_file = Label("//deps/rust/crates:BUILD.hashbrown-0.15.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__heck-0.5.0",
        sha256 = "2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/heck/0.5.0/download"],
        strip_prefix = "heck-0.5.0",
        build_file = Label("//deps/rust/crates:BUILD.heck-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__io-uring-0.7.9",
        sha256 = "d93587f37623a1a17d94ef2bc9ada592f5465fe7732084ab7beefabe5c77c0c4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/io-uring/0.7.9/download"],
        strip_prefix = "io-uring-0.7.9",
        build_file = Label("//deps/rust/crates:BUILD.io-uring-0.7.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__is-macro-0.3.7",
        sha256 = "1d57a3e447e24c22647738e4607f1df1e0ec6f72e16182c4cd199f647cdfb0e4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/is-macro/0.3.7/download"],
        strip_prefix = "is-macro-0.3.7",
        build_file = Label("//deps/rust/crates:BUILD.is-macro-0.3.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__itertools-0.14.0",
        sha256 = "2b192c782037fadd9cfa75548310488aabdbf3d2da73885b31bd0abd03351285",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itertools/0.14.0/download"],
        strip_prefix = "itertools-0.14.0",
        build_file = Label("//deps/rust/crates:BUILD.itertools-0.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__itoa-1.0.15",
        sha256 = "4a5f13b858c8d314ee3e8f639011f7ccefe71f97f96e50151fb991f267928e2c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/itoa/1.0.15/download"],
        strip_prefix = "itoa-1.0.15",
        build_file = Label("//deps/rust/crates:BUILD.itoa-1.0.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__libc-0.2.174",
        sha256 = "1171693293099992e19cddea4e8b849964e9846f4acee11b3948bcc337be8776",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/libc/0.2.174/download"],
        strip_prefix = "libc-0.2.174",
        build_file = Label("//deps/rust/crates:BUILD.libc-0.2.174.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__log-0.4.27",
        sha256 = "13dc2df351e3202783a1fe0d44375f7295ffb4049267b0f3018346dc122a1d94",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/log/0.4.27/download"],
        strip_prefix = "log-0.4.27",
        build_file = Label("//deps/rust/crates:BUILD.log-0.4.27.bazel"),
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__lol_html-2.5.0",
        commit = "0b0b8b1cd1af77a1ab49290d4a922cfd42676f5b",
        init_submodules = True,
        remote = "https://github.com/cloudflare/lol-html",
        build_file = Label("//deps/rust/crates:BUILD.lol_html-2.5.0.bazel"),
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__lol_html_c_api-1.3.0",
        commit = "0b0b8b1cd1af77a1ab49290d4a922cfd42676f5b",
        init_submodules = True,
        remote = "https://github.com/cloudflare/lol-html",
        build_file = Label("//deps/rust/crates:BUILD.lol_html_c_api-1.3.0.bazel"),
        strip_prefix = "c-api",
    )

    maybe(
        http_archive,
        name = "crates_vendor__memchr-2.7.5",
        sha256 = "32a282da65faaf38286cf3be983213fcf1d2e2a58700e808f83f4ea9a4804bc0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/memchr/2.7.5/download"],
        strip_prefix = "memchr-2.7.5",
        build_file = Label("//deps/rust/crates:BUILD.memchr-2.7.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mime-0.3.17",
        sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mime/0.3.17/download"],
        strip_prefix = "mime-0.3.17",
        build_file = Label("//deps/rust/crates:BUILD.mime-0.3.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__miniz_oxide-0.8.9",
        sha256 = "1fa76a2c86f704bdb222d66965fb3d63269ce38518b83cb0575fca855ebb6316",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/miniz_oxide/0.8.9/download"],
        strip_prefix = "miniz_oxide-0.8.9",
        build_file = Label("//deps/rust/crates:BUILD.miniz_oxide-0.8.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mio-1.0.4",
        sha256 = "78bed444cc8a2160f01cbcf811ef18cac863ad68ae8ca62092e8db51d51c761c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/mio/1.0.4/download"],
        strip_prefix = "mio-1.0.4",
        build_file = Label("//deps/rust/crates:BUILD.mio-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__new_debug_unreachable-1.0.6",
        sha256 = "650eef8c711430f1a879fdd01d4745a7deea475becfb90269c06775983bbf086",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/new_debug_unreachable/1.0.6/download"],
        strip_prefix = "new_debug_unreachable-1.0.6",
        build_file = Label("//deps/rust/crates:BUILD.new_debug_unreachable-1.0.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__nix-0.30.1",
        sha256 = "74523f3a35e05aba87a1d978330aef40f67b0304ac79c1c00b294c9830543db6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/nix/0.30.1/download"],
        strip_prefix = "nix-0.30.1",
        build_file = Label("//deps/rust/crates:BUILD.nix-0.30.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__object-0.36.7",
        sha256 = "62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/object/0.36.7/download"],
        strip_prefix = "object-0.36.7",
        build_file = Label("//deps/rust/crates:BUILD.object-0.36.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__once_cell-1.21.3",
        sha256 = "42f5e15c9953c5e4ccceeb2e7382a716482c34515315f7b03532b8b4e8393d2d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/once_cell/1.21.3/download"],
        strip_prefix = "once_cell-1.21.3",
        build_file = Label("//deps/rust/crates:BUILD.once_cell-1.21.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf-0.11.3",
        sha256 = "1fd6780a80ae0c52cc120a26a1a42c1ae51b247a253e4e06113d23d2c2edd078",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf/0.11.3/download"],
        strip_prefix = "phf-0.11.3",
        build_file = Label("//deps/rust/crates:BUILD.phf-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_codegen-0.11.3",
        sha256 = "aef8048c789fa5e851558d709946d6d79a8ff88c0440c587967f8e94bfb1216a",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_codegen/0.11.3/download"],
        strip_prefix = "phf_codegen-0.11.3",
        build_file = Label("//deps/rust/crates:BUILD.phf_codegen-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_generator-0.11.3",
        sha256 = "3c80231409c20246a13fddb31776fb942c38553c51e871f8cbd687a4cfb5843d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_generator/0.11.3/download"],
        strip_prefix = "phf_generator-0.11.3",
        build_file = Label("//deps/rust/crates:BUILD.phf_generator-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_macros-0.11.3",
        sha256 = "f84ac04429c13a7ff43785d75ad27569f2951ce0ffd30a3321230db2fc727216",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_macros/0.11.3/download"],
        strip_prefix = "phf_macros-0.11.3",
        build_file = Label("//deps/rust/crates:BUILD.phf_macros-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__phf_shared-0.11.3",
        sha256 = "67eabc2ef2a60eb7faa00097bd1ffdb5bd28e62bf39990626a582201b7a754e5",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/phf_shared/0.11.3/download"],
        strip_prefix = "phf_shared-0.11.3",
        build_file = Label("//deps/rust/crates:BUILD.phf_shared-0.11.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pico-args-0.5.0",
        sha256 = "5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pico-args/0.5.0/download"],
        strip_prefix = "pico-args-0.5.0",
        build_file = Label("//deps/rust/crates:BUILD.pico-args-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pin-project-lite-0.2.16",
        sha256 = "3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pin-project-lite/0.2.16/download"],
        strip_prefix = "pin-project-lite-0.2.16",
        build_file = Label("//deps/rust/crates:BUILD.pin-project-lite-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pin-utils-0.1.0",
        sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/pin-utils/0.1.0/download"],
        strip_prefix = "pin-utils-0.1.0",
        build_file = Label("//deps/rust/crates:BUILD.pin-utils-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__ppv-lite86-0.2.21",
        sha256 = "85eae3c4ed2f50dcfe72643da4befc30deadb458a9b590d720cde2f2b1e97da9",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ppv-lite86/0.2.21/download"],
        strip_prefix = "ppv-lite86-0.2.21",
        build_file = Label("//deps/rust/crates:BUILD.ppv-lite86-0.2.21.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__precomputed-hash-0.1.1",
        sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/precomputed-hash/0.1.1/download"],
        strip_prefix = "precomputed-hash-0.1.1",
        build_file = Label("//deps/rust/crates:BUILD.precomputed-hash-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__proc-macro2-1.0.95",
        sha256 = "02b3e5e68a3a1a02aad3ec490a98007cbc13c37cbe84a3cd7b8e406d76e7f778",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/proc-macro2/1.0.95/download"],
        strip_prefix = "proc-macro2-1.0.95",
        build_file = Label("//deps/rust/crates:BUILD.proc-macro2-1.0.95.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__quote-1.0.40",
        sha256 = "1885c039570dc00dcb4ff087a89e185fd56bae234ddc7f056a945bf36467248d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/quote/1.0.40/download"],
        strip_prefix = "quote-1.0.40",
        build_file = Label("//deps/rust/crates:BUILD.quote-1.0.40.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand-0.8.5",
        sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand/0.8.5/download"],
        strip_prefix = "rand-0.8.5",
        build_file = Label("//deps/rust/crates:BUILD.rand-0.8.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_chacha-0.3.1",
        sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_chacha/0.3.1/download"],
        strip_prefix = "rand_chacha-0.3.1",
        build_file = Label("//deps/rust/crates:BUILD.rand_chacha-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_core-0.6.4",
        sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rand_core/0.6.4/download"],
        strip_prefix = "rand_core-0.6.4",
        build_file = Label("//deps/rust/crates:BUILD.rand_core-0.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__regex-automata-0.4.9",
        sha256 = "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/regex-automata/0.4.9/download"],
        strip_prefix = "regex-automata-0.4.9",
        build_file = Label("//deps/rust/crates:BUILD.regex-automata-0.4.9.bazel"),
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__ruff_python_ast-0.0.0",
        commit = "32c54189cb45a9d0409a1140265ce6d5fcec214d",
        init_submodules = True,
        remote = "https://github.com/astral-sh/ruff",
        build_file = Label("//deps/rust/crates:BUILD.ruff_python_ast-0.0.0.bazel"),
        strip_prefix = "crates/ruff_python_ast",
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__ruff_python_parser-0.0.0",
        commit = "32c54189cb45a9d0409a1140265ce6d5fcec214d",
        init_submodules = True,
        remote = "https://github.com/astral-sh/ruff",
        build_file = Label("//deps/rust/crates:BUILD.ruff_python_parser-0.0.0.bazel"),
        strip_prefix = "crates/ruff_python_parser",
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__ruff_python_trivia-0.0.0",
        commit = "32c54189cb45a9d0409a1140265ce6d5fcec214d",
        init_submodules = True,
        remote = "https://github.com/astral-sh/ruff",
        build_file = Label("//deps/rust/crates:BUILD.ruff_python_trivia-0.0.0.bazel"),
        strip_prefix = "crates/ruff_python_trivia",
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__ruff_source_file-0.0.0",
        commit = "32c54189cb45a9d0409a1140265ce6d5fcec214d",
        init_submodules = True,
        remote = "https://github.com/astral-sh/ruff",
        build_file = Label("//deps/rust/crates:BUILD.ruff_source_file-0.0.0.bazel"),
        strip_prefix = "crates/ruff_source_file",
    )

    maybe(
        new_git_repository,
        name = "crates_vendor__ruff_text_size-0.0.0",
        commit = "32c54189cb45a9d0409a1140265ce6d5fcec214d",
        init_submodules = True,
        remote = "https://github.com/astral-sh/ruff",
        build_file = Label("//deps/rust/crates:BUILD.ruff_text_size-0.0.0.bazel"),
        strip_prefix = "crates/ruff_text_size",
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustc-demangle-0.1.26",
        sha256 = "56f7d92ca342cea22a06f2121d944b4fd82af56988c270852495420f961d4ace",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc-demangle/0.1.26/download"],
        strip_prefix = "rustc-demangle-0.1.26",
        build_file = Label("//deps/rust/crates:BUILD.rustc-demangle-0.1.26.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustc-hash-2.1.1",
        sha256 = "357703d41365b4b27c590e3ed91eabb1b663f07c4c084095e60cbed4362dff0d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustc-hash/2.1.1/download"],
        strip_prefix = "rustc-hash-2.1.1",
        build_file = Label("//deps/rust/crates:BUILD.rustc-hash-2.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustversion-1.0.22",
        sha256 = "b39cdef0fa800fc44525c84ccb54a029961a8215f9619753635a9c0d2538d46d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/rustversion/1.0.22/download"],
        strip_prefix = "rustversion-1.0.22",
        build_file = Label("//deps/rust/crates:BUILD.rustversion-1.0.22.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__ryu-1.0.20",
        sha256 = "28d3b2b1366ec20994f1fd18c3c594f05c5dd4bc44d8bb0c1c632c8d6829481f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/ryu/1.0.20/download"],
        strip_prefix = "ryu-1.0.20",
        build_file = Label("//deps/rust/crates:BUILD.ryu-1.0.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__scratch-1.0.9",
        sha256 = "d68f2ec51b097e4c1a75b681a8bec621909b5e91f15bb7b840c4f2f7b01148b2",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/scratch/1.0.9/download"],
        strip_prefix = "scratch-1.0.9",
        build_file = Label("//deps/rust/crates:BUILD.scratch-1.0.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__selectors-0.27.0",
        sha256 = "5b75e048a93e14929e68e37b82e207db957cbb368375a80ed3ca28ac75080856",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/selectors/0.27.0/download"],
        strip_prefix = "selectors-0.27.0",
        build_file = Label("//deps/rust/crates:BUILD.selectors-0.27.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__serde-1.0.219",
        sha256 = "5f0e2c6ed6606019b4e29e69dbaba95b11854410e5347d525002456dbbb786b6",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde/1.0.219/download"],
        strip_prefix = "serde-1.0.219",
        build_file = Label("//deps/rust/crates:BUILD.serde-1.0.219.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__serde_derive-1.0.219",
        sha256 = "5b0276cf7f2c73365f7157c8123c21cd9a50fbbd844757af28ca1f5925fc2a00",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_derive/1.0.219/download"],
        strip_prefix = "serde_derive-1.0.219",
        build_file = Label("//deps/rust/crates:BUILD.serde_derive-1.0.219.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__serde_json-1.0.142",
        sha256 = "030fedb782600dcbd6f02d479bf0d817ac3bb40d644745b769d6a96bc3afc5a7",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/serde_json/1.0.142/download"],
        strip_prefix = "serde_json-1.0.142",
        build_file = Label("//deps/rust/crates:BUILD.serde_json-1.0.142.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__servo_arc-0.4.1",
        sha256 = "204ea332803bd95a0b60388590d59cf6468ec9becf626e2451f1d26a1d972de4",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/servo_arc/0.4.1/download"],
        strip_prefix = "servo_arc-0.4.1",
        build_file = Label("//deps/rust/crates:BUILD.servo_arc-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__shlex-1.3.0",
        sha256 = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/shlex/1.3.0/download"],
        strip_prefix = "shlex-1.3.0",
        build_file = Label("//deps/rust/crates:BUILD.shlex-1.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__siphasher-1.0.1",
        sha256 = "56199f7ddabf13fe5074ce809e7d3f42b42ae711800501b5b16ea82ad029c39d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/siphasher/1.0.1/download"],
        strip_prefix = "siphasher-1.0.1",
        build_file = Label("//deps/rust/crates:BUILD.siphasher-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__slab-0.4.11",
        sha256 = "7a2ae44ef20feb57a68b23d846850f861394c2e02dc425a50098ae8c90267589",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/slab/0.4.11/download"],
        strip_prefix = "slab-0.4.11",
        build_file = Label("//deps/rust/crates:BUILD.slab-0.4.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__smallvec-1.15.1",
        sha256 = "67b1b7a3b5fe4f1376887184045fcf45c69e92af734b7aaddc05fb777b6fbd03",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/smallvec/1.15.1/download"],
        strip_prefix = "smallvec-1.15.1",
        build_file = Label("//deps/rust/crates:BUILD.smallvec-1.15.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__socket2-0.6.0",
        sha256 = "233504af464074f9d066d7b5416c5f9b894a5862a6506e306f7b816cdd6f1807",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/socket2/0.6.0/download"],
        strip_prefix = "socket2-0.6.0",
        build_file = Label("//deps/rust/crates:BUILD.socket2-0.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__stable_deref_trait-1.2.0",
        sha256 = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/stable_deref_trait/1.2.0/download"],
        strip_prefix = "stable_deref_trait-1.2.0",
        build_file = Label("//deps/rust/crates:BUILD.stable_deref_trait-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__static_assertions-1.1.0",
        sha256 = "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/static_assertions/1.1.0/download"],
        strip_prefix = "static_assertions-1.1.0",
        build_file = Label("//deps/rust/crates:BUILD.static_assertions-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__syn-2.0.104",
        sha256 = "17b6f705963418cdb9927482fa304bc562ece2fdd4f616084c50b7023b435a40",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/syn/2.0.104/download"],
        strip_prefix = "syn-2.0.104",
        build_file = Label("//deps/rust/crates:BUILD.syn-2.0.104.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__termcolor-1.4.1",
        sha256 = "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/termcolor/1.4.1/download"],
        strip_prefix = "termcolor-1.4.1",
        build_file = Label("//deps/rust/crates:BUILD.termcolor-1.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__thiserror-2.0.12",
        sha256 = "567b8a2dae586314f7be2a752ec7474332959c6460e02bde30d702a66d488708",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror/2.0.12/download"],
        strip_prefix = "thiserror-2.0.12",
        build_file = Label("//deps/rust/crates:BUILD.thiserror-2.0.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__thiserror-impl-2.0.12",
        sha256 = "7f7cf42b4507d8ea322120659672cf1b9dbb93f8f2d4ecfd6e51350ff5b17a1d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/thiserror-impl/2.0.12/download"],
        strip_prefix = "thiserror-impl-2.0.12",
        build_file = Label("//deps/rust/crates:BUILD.thiserror-impl-2.0.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tinyvec-1.9.0",
        sha256 = "09b3661f17e86524eccd4371ab0429194e0d7c008abb45f7a7495b1719463c71",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tinyvec/1.9.0/download"],
        strip_prefix = "tinyvec-1.9.0",
        build_file = Label("//deps/rust/crates:BUILD.tinyvec-1.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tinyvec_macros-0.1.1",
        sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tinyvec_macros/0.1.1/download"],
        strip_prefix = "tinyvec_macros-0.1.1",
        build_file = Label("//deps/rust/crates:BUILD.tinyvec_macros-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-1.47.1",
        sha256 = "89e49afdadebb872d3145a5638b59eb0691ea23e46ca484037cfab3b76b95038",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tokio/1.47.1/download"],
        strip_prefix = "tokio-1.47.1",
        build_file = Label("//deps/rust/crates:BUILD.tokio-1.47.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-0.1.41",
        sha256 = "784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing/0.1.41/download"],
        strip_prefix = "tracing-0.1.41",
        build_file = Label("//deps/rust/crates:BUILD.tracing-0.1.41.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-core-0.1.34",
        sha256 = "b9d12581f227e93f094d3af2ae690a574abb8a2b9b7a96e7cfe9647b2b617678",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/tracing-core/0.1.34/download"],
        strip_prefix = "tracing-core-0.1.34",
        build_file = Label("//deps/rust/crates:BUILD.tracing-core-0.1.34.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode-ident-1.0.18",
        sha256 = "5a5f39404a5da50712a4c1eecf25e90dd62b613502b7e925fd4e4d19b5c96512",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-ident/1.0.18/download"],
        strip_prefix = "unicode-ident-1.0.18",
        build_file = Label("//deps/rust/crates:BUILD.unicode-ident-1.0.18.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode-normalization-0.1.24",
        sha256 = "5033c97c4262335cded6d6fc3e5c18ab755e1a3dc96376350f3d8e9f009ad956",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-normalization/0.1.24/download"],
        strip_prefix = "unicode-normalization-0.1.24",
        build_file = Label("//deps/rust/crates:BUILD.unicode-normalization-0.1.24.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode-width-0.2.1",
        sha256 = "4a1a07cc7db3810833284e8d372ccdc6da29741639ecc70c9ec107df0fa6154c",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode-width/0.2.1/download"],
        strip_prefix = "unicode-width-0.2.1",
        build_file = Label("//deps/rust/crates:BUILD.unicode-width-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode_names2-1.3.0",
        sha256 = "d1673eca9782c84de5f81b82e4109dcfb3611c8ba0d52930ec4a9478f547b2dd",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode_names2/1.3.0/download"],
        strip_prefix = "unicode_names2-1.3.0",
        build_file = Label("//deps/rust/crates:BUILD.unicode_names2-1.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode_names2_generator-1.3.0",
        sha256 = "b91e5b84611016120197efd7dc93ef76774f4e084cd73c9fb3ea4a86c570c56e",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/unicode_names2_generator/1.3.0/download"],
        strip_prefix = "unicode_names2_generator-1.3.0",
        build_file = Label("//deps/rust/crates:BUILD.unicode_names2_generator-1.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasi-0.11.1-wasi-snapshot-preview1",
        sha256 = "ccf3ec651a847eb01de73ccad15eb7d99f80485de043efb2f370cd654f4ea44b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/wasi/0.11.1+wasi-snapshot-preview1/download"],
        strip_prefix = "wasi-0.11.1+wasi-snapshot-preview1",
        build_file = Label("//deps/rust/crates:BUILD.wasi-0.11.1+wasi-snapshot-preview1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__winapi-util-0.1.9",
        sha256 = "cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/winapi-util/0.1.9/download"],
        strip_prefix = "winapi-util-0.1.9",
        build_file = Label("//deps/rust/crates:BUILD.winapi-util-0.1.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows-sys-0.59.0",
        sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-sys/0.59.0/download"],
        strip_prefix = "windows-sys-0.59.0",
        build_file = Label("//deps/rust/crates:BUILD.windows-sys-0.59.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows-targets-0.52.6",
        sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows-targets/0.52.6/download"],
        strip_prefix = "windows-targets-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows-targets-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_aarch64_gnullvm-0.52.6",
        sha256 = "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_aarch64_gnullvm/0.52.6/download"],
        strip_prefix = "windows_aarch64_gnullvm-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_aarch64_gnullvm-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_aarch64_msvc-0.52.6",
        sha256 = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_aarch64_msvc/0.52.6/download"],
        strip_prefix = "windows_aarch64_msvc-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_aarch64_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_gnu-0.52.6",
        sha256 = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_i686_gnu/0.52.6/download"],
        strip_prefix = "windows_i686_gnu-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_i686_gnu-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_gnullvm-0.52.6",
        sha256 = "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_i686_gnullvm/0.52.6/download"],
        strip_prefix = "windows_i686_gnullvm-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_i686_gnullvm-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_msvc-0.52.6",
        sha256 = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_i686_msvc/0.52.6/download"],
        strip_prefix = "windows_i686_msvc-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_i686_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_gnu-0.52.6",
        sha256 = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_gnu/0.52.6/download"],
        strip_prefix = "windows_x86_64_gnu-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_x86_64_gnu-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_gnullvm-0.52.6",
        sha256 = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_gnullvm/0.52.6/download"],
        strip_prefix = "windows_x86_64_gnullvm-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_x86_64_gnullvm-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_msvc-0.52.6",
        sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/windows_x86_64_msvc/0.52.6/download"],
        strip_prefix = "windows_x86_64_msvc-0.52.6",
        build_file = Label("//deps/rust/crates:BUILD.windows_x86_64_msvc-0.52.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__zerocopy-0.8.26",
        sha256 = "1039dd0d3c310cf05de012d8a39ff557cb0d23087fd44cad61df08fc31907a2f",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerocopy/0.8.26/download"],
        strip_prefix = "zerocopy-0.8.26",
        build_file = Label("//deps/rust/crates:BUILD.zerocopy-0.8.26.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__zerocopy-derive-0.8.26",
        sha256 = "9ecf5b4cc5364572d7f4c329661bcc82724222973f2cab6f050a4e5c22f75181",
        type = "tar.gz",
        urls = ["https://static.crates.io/crates/zerocopy-derive/0.8.26/download"],
        strip_prefix = "zerocopy-derive-0.8.26",
        build_file = Label("//deps/rust/crates:BUILD.zerocopy-derive-0.8.26.bazel"),
    )

    return [
        struct(repo = "crates_vendor__anyhow-1.0.98", is_dev_dep = False),
        struct(repo = "crates_vendor__capnp-0.21.4", is_dev_dep = False),
        struct(repo = "crates_vendor__capnpc-0.21.2", is_dev_dep = False),
        struct(repo = "crates_vendor__cc-1.2.32", is_dev_dep = False),
        struct(repo = "crates_vendor__clang-ast-0.1.31", is_dev_dep = False),
        struct(repo = "crates_vendor__clap-4.5.43", is_dev_dep = False),
        struct(repo = "crates_vendor__codespan-reporting-0.12.0", is_dev_dep = False),
        struct(repo = "crates_vendor__flate2-1.1.2", is_dev_dep = False),
        struct(repo = "crates_vendor__foldhash-0.1.5", is_dev_dep = False),
        struct(repo = "crates_vendor__futures-0.3.31", is_dev_dep = False),
        struct(repo = "crates_vendor__lol_html_c_api-1.3.0", is_dev_dep = False),
        struct(repo = "crates_vendor__nix-0.30.1", is_dev_dep = False),
        struct(repo = "crates_vendor__pico-args-0.5.0", is_dev_dep = False),
        struct(repo = "crates_vendor__proc-macro2-1.0.95", is_dev_dep = False),
        struct(repo = "crates_vendor__quote-1.0.40", is_dev_dep = False),
        struct(repo = "crates_vendor__ruff_python_ast-0.0.0", is_dev_dep = False),
        struct(repo = "crates_vendor__ruff_python_parser-0.0.0", is_dev_dep = False),
        struct(repo = "crates_vendor__rustversion-1.0.22", is_dev_dep = False),
        struct(repo = "crates_vendor__scratch-1.0.9", is_dev_dep = False),
        struct(repo = "crates_vendor__serde-1.0.219", is_dev_dep = False),
        struct(repo = "crates_vendor__serde_json-1.0.142", is_dev_dep = False),
        struct(repo = "crates_vendor__static_assertions-1.1.0", is_dev_dep = False),
        struct(repo = "crates_vendor__syn-2.0.104", is_dev_dep = False),
        struct(repo = "crates_vendor__thiserror-2.0.12", is_dev_dep = False),
        struct(repo = "crates_vendor__tokio-1.47.1", is_dev_dep = False),
        struct(repo = "crates_vendor__tracing-0.1.41", is_dev_dep = False),
    ]
